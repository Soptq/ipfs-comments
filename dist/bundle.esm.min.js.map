{"version":3,"file":"bundle.esm.min.js","sources":["../node_modules/streaming-iterables/dist/index.mjs","../node_modules/retry/lib/retry_operation.js","../node_modules/retry/lib/retry.js","../node_modules/retry/index.js","../node_modules/p-retry/index.js","../node_modules/it-last/index.js","../node_modules/it-pipe/index.js","../node_modules/varint/encode.js","../node_modules/varint/decode.js","../node_modules/varint/length.js","../node_modules/varint/index.js","../node_modules/multiformats/esm/vendor/varint.js","../node_modules/multiformats/esm/src/varint.js","../node_modules/multiformats/esm/src/bytes.js","../node_modules/multiformats/esm/src/hashes/digest.js","../node_modules/multiformats/esm/vendor/base-x.js","../node_modules/multiformats/esm/src/bases/base.js","../node_modules/multiformats/esm/src/bases/base58.js","../node_modules/multiformats/esm/src/bases/base32.js","../node_modules/multiformats/esm/src/cid.js","../node_modules/cborg/esm/lib/is.js","../node_modules/cborg/esm/lib/token.js","../node_modules/cborg/esm/lib/byte-utils.js","../node_modules/cborg/esm/lib/bl.js","../node_modules/cborg/esm/lib/common.js","../node_modules/cborg/esm/lib/0uint.js","../node_modules/cborg/esm/lib/1negint.js","../node_modules/cborg/esm/lib/2bytes.js","../node_modules/cborg/esm/lib/3string.js","../node_modules/cborg/esm/lib/4array.js","../node_modules/cborg/esm/lib/5map.js","../node_modules/cborg/esm/lib/6tag.js","../node_modules/cborg/esm/lib/7float.js","../node_modules/cborg/esm/lib/jump.js","../node_modules/cborg/esm/lib/encode.js","../node_modules/cborg/esm/lib/decode.js","../node_modules/@ipld/dag-cbor/esm/index.js","../node_modules/@ipld/car/esm/lib/decoder.js","../node_modules/@ipld/car/esm/lib/reader-browser.js","../node_modules/@ipld/car/esm/lib/iterator.js","../node_modules/@ipld/car/esm/lib/encoder.js","../node_modules/@ipld/car/esm/lib/iterator-channel.js","../node_modules/@ipld/car/esm/lib/writer-browser.js","../node_modules/it-batch/index.js","../node_modules/it-parallel-batch/index.js","../node_modules/merge-options/node_modules/is-plain-obj/index.js","../node_modules/merge-options/index.js","../node_modules/multiformats/esm/src/hashes/hasher.js","../node_modules/multiformats/esm/src/hashes/sha2-browser.js","../node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","../node_modules/murmurhash3js-revisited/index.js","../node_modules/@multiformats/murmur3/esm/index.js","../node_modules/ipfs-unixfs-importer/esm/src/options.js","../node_modules/err-code/index.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../node_modules/ipfs-unixfs/esm/src/unixfs.js","../node_modules/ipfs-unixfs/esm/src/index.js","../node_modules/@ipld/dag-pb/esm/src/pb-decode.js","../node_modules/@ipld/dag-pb/esm/src/pb-encode.js","../node_modules/@ipld/dag-pb/esm/src/util.js","../node_modules/@ipld/dag-pb/esm/src/index.js","../node_modules/ipfs-unixfs-importer/esm/src/utils/persist.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/dir.js","../node_modules/multiformats/esm/src/codecs/raw.js","../node_modules/it-all/index.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/flat.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/balanced.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/trickle.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/buffer-importer.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/bl/BufferList.js","../node_modules/rabin-wasm/src/rabin.js","../node_modules/@assemblyscript/loader/index.js","../node_modules/rabin-wasm/dist/rabin-wasm.js","../node_modules/rabin-wasm/src/index.js","../node_modules/ipfs-unixfs-importer/esm/src/chunker/rabin.js","../node_modules/ipfs-unixfs-importer/esm/src/chunker/fixed-size.js","../node_modules/multiformats/esm/src/bases/identity.js","../node_modules/multiformats/esm/src/bases/base2.js","../node_modules/multiformats/esm/src/bases/base8.js","../node_modules/multiformats/esm/src/bases/base10.js","../node_modules/multiformats/esm/src/bases/base16.js","../node_modules/multiformats/esm/src/bases/base36.js","../node_modules/multiformats/esm/src/bases/base64.js","../node_modules/multiformats/esm/src/bases/base256emoji.js","../node_modules/multiformats/esm/src/hashes/identity.js","../node_modules/multiformats/esm/src/codecs/json.js","../node_modules/multiformats/esm/src/basics.js","../node_modules/uint8arrays/esm/src/alloc.js","../node_modules/uint8arrays/esm/src/util/bases.js","../node_modules/uint8arrays/esm/src/from-string.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/validate-chunks.js","../node_modules/ipfs-unixfs-importer/esm/src/dag-builder/index.js","../node_modules/ipfs-unixfs-importer/esm/src/dir.js","../node_modules/ipfs-unixfs-importer/esm/src/dir-flat.js","../node_modules/sparse-array/index.js","../node_modules/hamt-sharding/src/bucket.js","../node_modules/hamt-sharding/src/consumable-buffer.js","../node_modules/uint8arrays/esm/src/concat.js","../node_modules/hamt-sharding/src/consumable-hash.js","../node_modules/hamt-sharding/src/index.js","../node_modules/ipfs-unixfs-importer/esm/src/dir-sharded.js","../node_modules/ipfs-unixfs-importer/esm/src/flat-to-shard.js","../node_modules/ipfs-unixfs-importer/esm/src/utils/to-path-components.js","../node_modules/ipfs-unixfs-importer/esm/src/tree-builder.js","../node_modules/ipfs-unixfs-importer/esm/src/index.js","../node_modules/browser-readablestream-to-it/index.js","../node_modules/blob-to-it/index.js","../node_modules/it-peekable/index.js","../node_modules/it-map/index.js","../node_modules/ipfs-core-utils/esm/src/files/utils.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-content.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-single.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-input-single.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-candidate-multiple.js","../node_modules/ipfs-core-utils/esm/src/files/normalise-input-multiple.js","../node_modules/ipfs-car/dist/esm/pack/utils/normalise-input.js","../node_modules/blockstore-core/esm/src/errors.js","../node_modules/it-drain/index.js","../node_modules/it-filter/index.js","../node_modules/it-take/index.js","../node_modules/blockstore-core/esm/src/base.js","../node_modules/ipfs-car/dist/esm/blockstore/memory.js","../node_modules/ipfs-car/dist/esm/pack/constants.js","../node_modules/ipfs-car/dist/esm/pack/index.js","../node_modules/@web3-storage/parse-link-header/index.js","../node_modules/ipfs-unixfs-exporter/esm/src/utils/find-cid-in-shard.js","../node_modules/ipfs-unixfs-exporter/esm/src/utils/extract-data-from-block.js","../node_modules/ipfs-unixfs-exporter/esm/src/utils/validate-offset-and-length.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/file.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/directory.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/unixfs-v1/index.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/raw.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/dag-cbor.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/identity.js","../node_modules/ipfs-unixfs-exporter/esm/src/resolvers/index.js","../node_modules/ipfs-unixfs-exporter/esm/src/index.js","../node_modules/uint8arrays/esm/src/equals.js","../node_modules/ipfs-car/dist/esm/unpack/utils/verifying-get-only-blockstore.js","../node_modules/ipfs-car/dist/esm/unpack/index.js","../node_modules/multiformats/esm/src/block.js","../node_modules/carbites/node_modules/@ipld/dag-cbor/esm/index.js","../node_modules/carbites/esm/lib/treewalk/splitter.js","../node_modules/throttled-queue/dist/throttledQueue.js","../node_modules/web3.storage/src/platform.web.js","../node_modules/web3.storage/src/lib.js","../node_modules/crypto-js/core.js","../node_modules/crypto-js/enc-base64.js","../node_modules/crypto-js/md5.js","../node_modules/crypto-js/sha1.js","../node_modules/crypto-js/hmac.js","../node_modules/crypto-js/evpkdf.js","../node_modules/crypto-js/aes.js","../node_modules/crypto-js/cipher-core.js","../node_modules/crypto-js/enc-utf8.js","../src/cache.js","../src/storage.js","../src/lib.js"],"sourcesContent":["async function* _batch(size, iterable) {\n    let dataBatch = [];\n    for await (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction* _syncBatch(size, iterable) {\n    let dataBatch = [];\n    for (const data of iterable) {\n        dataBatch.push(data);\n        if (dataBatch.length === size) {\n            yield dataBatch;\n            dataBatch = [];\n        }\n    }\n    if (dataBatch.length > 0) {\n        yield dataBatch;\n    }\n}\nfunction batch(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batch(size, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _batch(size, iterable);\n    }\n    return _syncBatch(size, iterable);\n}\n\nconst TIMEOUT = Symbol('TIMEOUT');\nconst createTimer = (duration) => {\n    let timeoutId;\n    return [\n        new Promise(resolve => {\n            timeoutId = setTimeout(() => resolve(TIMEOUT), duration);\n        }),\n        () => {\n            clearTimeout(timeoutId);\n        },\n    ];\n};\n// Like `batch` but flushes early if the `timeout` is reached\n// NOTE: The strategy is to only hold onto a single item for a maximum of `timeout` ms.\nasync function* _batchWithTimeout(size, timeout, iterable) {\n    const iterator = iterable[Symbol.asyncIterator]();\n    let pendingData;\n    let batchData = [];\n    let timer;\n    let clearTimer;\n    const startTimer = () => {\n        deleteTimer();\n        [timer, clearTimer] = createTimer(timeout);\n    };\n    const deleteTimer = () => {\n        if (clearTimer) {\n            clearTimer();\n        }\n        timer = undefined;\n    };\n    pendingData = iterator.next();\n    while (true) {\n        const res = await (timer ? Promise.race([pendingData, timer]) : pendingData);\n        if (res === TIMEOUT || res.done) {\n            // Flush early (before we reach the batch size)\n            if (batchData.length) {\n                yield batchData;\n                batchData = [];\n            }\n            deleteTimer();\n            // And exit appropriately\n            if (res !== TIMEOUT) {\n                // done\n                break;\n            }\n            continue;\n        }\n        // Fetch next item early doors (before we potentially yield)\n        pendingData = iterator.next();\n        // Then handle the value\n        batchData.push(res.value);\n        if (batchData.length === 1) {\n            // Start timer once we have at least 1 item ready to go\n            startTimer();\n        }\n        if (batchData.length === size) {\n            yield batchData;\n            batchData = [];\n            deleteTimer();\n            continue;\n        }\n    }\n}\nfunction batchWithTimeout(size, timeout, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => batchWithTimeout(size, timeout, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] && timeout !== Infinity) {\n        return _batchWithTimeout(size, timeout, iterable);\n    }\n    // For sync iterables or an infinite timeout, the timeout is irrelevant so just fallback to regular `batch`.\n    return batch(size, iterable);\n}\n\nfunction getIterator(iterable) {\n    if (typeof iterable.next === 'function') {\n        return iterable;\n    }\n    if (typeof iterable[Symbol.iterator] === 'function') {\n        return iterable[Symbol.iterator]();\n    }\n    if (typeof iterable[Symbol.asyncIterator] === 'function') {\n        return iterable[Symbol.asyncIterator]();\n    }\n    throw new TypeError('\"values\" does not to conform to any of the iterator or iterable protocols');\n}\n\nfunction defer() {\n    let reject;\n    let resolve;\n    const promise = new Promise((resolveFunc, rejectFunc) => {\n        resolve = resolveFunc;\n        reject = rejectFunc;\n    });\n    return {\n        promise,\n        reject,\n        resolve,\n    };\n}\n\nfunction _buffer(size, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let reading = false;\n    let ended = false;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const readDeferred = readQueue.shift();\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                readDeferred.reject(error);\n            }\n            else {\n                readDeferred.resolve({ done: false, value });\n            }\n        }\n        while (readQueue.length > 0 && ended) {\n            const { resolve } = readQueue.shift();\n            resolve({ done: true, value: undefined });\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (resultQueue.length >= size) {\n            return;\n        }\n        reading = true;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n            }\n            else {\n                resultQueue.push({ value });\n            }\n        }\n        catch (error) {\n            ended = true;\n            resultQueue.push({ error });\n        }\n        fulfillReadQueue();\n        reading = false;\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length > 0) {\n            const { error, value } = resultQueue.shift();\n            if (error) {\n                throw error;\n            }\n            fillQueue();\n            return { done: false, value };\n        }\n        if (ended) {\n            return { done: true, value: undefined }; // stupid ts\n        }\n        const deferred = defer();\n        readQueue.push(deferred);\n        fillQueue();\n        return deferred.promise;\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction* syncBuffer(size, iterable) {\n    const valueQueue = [];\n    let e;\n    try {\n        for (const value of iterable) {\n            valueQueue.push(value);\n            if (valueQueue.length <= size) {\n                continue;\n            }\n            yield valueQueue.shift();\n        }\n    }\n    catch (error) {\n        e = error;\n    }\n    for (const value of valueQueue) {\n        yield value;\n    }\n    if (e) {\n        throw e;\n    }\n}\nfunction buffer(size, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => buffer(size, curriedIterable);\n    }\n    if (size === 0) {\n        return iterable;\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _buffer(size, iterable);\n    }\n    return syncBuffer(size, iterable);\n}\n\nasync function _collect(iterable) {\n    const values = [];\n    for await (const value of iterable) {\n        values.push(value);\n    }\n    return values;\n}\nfunction collect(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _collect(iterable);\n    }\n    return Array.from(iterable);\n}\n\nasync function* _concat(iterables) {\n    for await (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction* _syncConcat(iterables) {\n    for (const iterable of iterables) {\n        yield* iterable;\n    }\n}\nfunction concat(...iterables) {\n    const hasAnyAsync = iterables.find(itr => itr[Symbol.asyncIterator] !== undefined);\n    if (hasAnyAsync) {\n        return _concat(iterables);\n    }\n    else {\n        return _syncConcat(iterables);\n    }\n}\n\nasync function _consume(iterable) {\n    for await (const val of iterable) {\n        // do nothing\n    }\n}\nfunction consume(iterable) {\n    if (iterable[Symbol.asyncIterator]) {\n        return _consume(iterable);\n    }\n    for (const val of iterable) {\n        // do nothing\n    }\n}\n\nasync function* _filter(filterFunc, iterable) {\n    for await (const data of iterable) {\n        if (await filterFunc(data)) {\n            yield data;\n        }\n    }\n}\nfunction filter(filterFunc, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _filter(filterFunc, curriedIterable);\n    }\n    return _filter(filterFunc, iterable);\n}\n\nasync function* flatten(iterable) {\n    for await (const maybeItr of iterable) {\n        if (maybeItr && typeof maybeItr !== 'string' && (maybeItr[Symbol.iterator] || maybeItr[Symbol.asyncIterator])) {\n            yield* flatten(maybeItr);\n        }\n        else {\n            yield maybeItr;\n        }\n    }\n}\n\nasync function* _map(func, iterable) {\n    for await (const val of iterable) {\n        yield await func(val);\n    }\n}\nfunction map(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => _map(func, curriedIterable);\n    }\n    return _map(func, iterable);\n}\n\nfunction flatMap(func, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => flatMap(func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(map(func, iterable)));\n}\n\nfunction _flatTransform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            if (value && value[Symbol.asyncIterator]) {\n                for await (const asyncVal of value) {\n                    resultQueue.push(asyncVal);\n                }\n            }\n            else {\n                resultQueue.push(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction flatTransform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? flatTransform(concurrency, curriedFunc, curriedIterable)\n            : flatTransform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => flatTransform(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(_flatTransform(concurrency, func, iterable)));\n}\n\nasync function onceReadable(stream) {\n    return new Promise(resolve => {\n        stream.once('readable', () => {\n            resolve();\n        });\n    });\n}\nasync function* _fromStream(stream) {\n    while (true) {\n        const data = stream.read();\n        if (data !== null) {\n            yield data;\n            continue;\n        }\n        if (stream._readableState.ended) {\n            break;\n        }\n        await onceReadable(stream);\n    }\n}\nfunction fromStream(stream) {\n    if (typeof stream[Symbol.asyncIterator] === 'function') {\n        return stream;\n    }\n    return _fromStream(stream);\n}\n\nasync function* merge(...iterables) {\n    const sources = new Set(iterables.map(getIterator));\n    while (sources.size > 0) {\n        for (const iterator of sources) {\n            const nextVal = await iterator.next();\n            if (nextVal.done) {\n                sources.delete(iterator);\n            }\n            else {\n                yield nextVal.value;\n            }\n        }\n    }\n}\n\nfunction pipeline(firstFn, ...fns) {\n    let previousFn = firstFn();\n    for (const func of fns) {\n        previousFn = func(previousFn);\n    }\n    return previousFn;\n}\n\nasync function* _parallelMap(concurrency, func, iterable) {\n    let transformError = null;\n    const wrapFunc = value => ({\n        value: func(value),\n    });\n    const stopOnError = async function* (source) {\n        for await (const value of source) {\n            if (transformError) {\n                return;\n            }\n            yield value;\n        }\n    };\n    const output = pipeline(() => iterable, buffer(1), stopOnError, map(wrapFunc), buffer(concurrency - 1));\n    const itr = getIterator(output);\n    while (true) {\n        const { value, done } = await itr.next();\n        if (done) {\n            break;\n        }\n        try {\n            const val = await value.value;\n            if (!transformError) {\n                yield val;\n            }\n        }\n        catch (error) {\n            transformError = error;\n        }\n    }\n    if (transformError) {\n        throw transformError;\n    }\n}\nfunction parallelMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => parallelMap(concurrency, curriedFunc, curriedIterable);\n    }\n    if (iterable === undefined) {\n        return curriedIterable => parallelMap(concurrency, func, curriedIterable);\n    }\n    if (concurrency === 1) {\n        return map(func, iterable);\n    }\n    return _parallelMap(concurrency, func, iterable);\n}\n\nfunction parallelFlatMap(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? parallelFlatMap(concurrency, curriedFunc, curriedIterable)\n            : parallelFlatMap(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => parallelFlatMap(concurrency, func, curriedIterable);\n    }\n    return filter(i => i !== undefined && i !== null, flatten(parallelMap(concurrency, func, iterable)));\n}\n\nasync function* parallelMerge(...iterables) {\n    const inputs = iterables.map(getIterator);\n    const concurrentWork = new Set();\n    const values = new Map();\n    let lastError = null;\n    let errCb = null;\n    let valueCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDone = value => {\n        if (valueCb) {\n            valueCb(value);\n        }\n    };\n    const waitForQueue = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            reject(lastError);\n        }\n        if (values.size > 0) {\n            return resolve();\n        }\n        valueCb = resolve;\n        errCb = reject;\n    });\n    const queueNext = input => {\n        const nextVal = Promise.resolve(input.next()).then(async ({ done, value }) => {\n            if (!done) {\n                values.set(input, value);\n            }\n            concurrentWork.delete(nextVal);\n        });\n        concurrentWork.add(nextVal);\n        nextVal.then(notifyDone, notifyError);\n    };\n    for (const input of inputs) {\n        queueNext(input);\n    }\n    while (true) {\n        // We technically don't have to check `values.size` as the for loop should have emptied it\n        // However I haven't yet found specs verifying that behavior, only tests\n        // the guard in waitForQueue() checking for values is in place for the same reason\n        if (concurrentWork.size === 0 && values.size === 0) {\n            return;\n        }\n        await waitForQueue();\n        for (const [input, value] of values) {\n            values.delete(input);\n            yield value;\n            queueNext(input);\n        }\n    }\n}\n\nasync function _reduce(func, start, iterable) {\n    let value = start;\n    for await (const nextItem of iterable) {\n        value = await func(value, nextItem);\n    }\n    return value;\n}\nfunction reduce(func, start, iterable) {\n    if (start === undefined) {\n        return (curriedStart, curriedIterable) => curriedIterable ? _reduce(func, curriedStart, curriedIterable) : reduce(func, curriedStart);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => reduce(func, start, curriedIterable);\n    }\n    return _reduce(func, start, iterable);\n}\n\nasync function* _take(count, iterable) {\n    let taken = 0;\n    for await (const val of iterable) {\n        yield await val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction* _syncTake(count, iterable) {\n    let taken = 0;\n    for (const val of iterable) {\n        yield val;\n        taken++;\n        if (taken >= count) {\n            break;\n        }\n    }\n}\nfunction take(count, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => take(count, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator]) {\n        return _take(count, iterable);\n    }\n    return _syncTake(count, iterable);\n}\n\nasync function* _asyncTap(func, iterable) {\n    for await (const val of iterable) {\n        await func(val);\n        yield val;\n    }\n}\nfunction tap(func, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _asyncTap(func, curriedIterable);\n    }\n    return _asyncTap(func, iterable);\n}\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\nfunction _throttle(limit, interval, iterable) {\n    if (!Number.isFinite(limit)) {\n        throw new TypeError('Expected `limit` to be a finite number');\n    }\n    if (limit <= 0) {\n        throw new TypeError('Expected `limit` to be greater than 0');\n    }\n    if (!Number.isFinite(interval)) {\n        throw new TypeError('Expected `interval` to be a finite number');\n    }\n    return (async function* __throttle() {\n        let sent = 0;\n        let time;\n        for await (const val of iterable) {\n            if (sent < limit) {\n                if (typeof time === 'undefined') {\n                    time = Date.now();\n                }\n                sent++;\n                yield val;\n                continue;\n            }\n            // Only wait if the interval hasn't already passed while we were\n            // yielding the previous values.\n            const elapsedMs = Date.now() - time;\n            const waitFor = interval - elapsedMs;\n            if (waitFor > 0) {\n                await sleep(waitFor);\n            }\n            time = Date.now();\n            sent = 1;\n            yield val;\n        }\n    })();\n}\nfunction throttle(limit, interval, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _throttle(limit, interval, curriedIterable);\n    }\n    return _throttle(limit, interval, iterable);\n}\n\nfunction addTime(a, b) {\n    let seconds = a[0] + b[0];\n    let nanoseconds = a[1] + b[1];\n    if (nanoseconds >= 1000000000) {\n        const remainder = nanoseconds % 1000000000;\n        seconds += (nanoseconds - remainder) / 1000000000;\n        nanoseconds = remainder;\n    }\n    return [seconds, nanoseconds];\n}\nasync function* _asyncTime(config, iterable) {\n    const itr = iterable[Symbol.asyncIterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = await itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction* _syncTime(config, iterable) {\n    const itr = iterable[Symbol.iterator]();\n    let total = [0, 0];\n    while (true) {\n        const start = process.hrtime();\n        const { value, done } = itr.next();\n        const delta = process.hrtime(start);\n        total = addTime(total, delta);\n        if (config.progress) {\n            config.progress(delta, total);\n        }\n        if (done) {\n            if (config.total) {\n                config.total(total);\n            }\n            return value;\n        }\n        yield value;\n    }\n}\nfunction time(config = {}, iterable) {\n    if (iterable === undefined) {\n        return curriedIterable => time(config, curriedIterable);\n    }\n    if (iterable[Symbol.asyncIterator] !== undefined) {\n        return _asyncTime(config, iterable);\n    }\n    else {\n        return _syncTime(config, iterable);\n    }\n}\n\nfunction _transform(concurrency, func, iterable) {\n    const iterator = getIterator(iterable);\n    const resultQueue = [];\n    const readQueue = [];\n    let ended = false;\n    let reading = false;\n    let inflightCount = 0;\n    let lastError = null;\n    function fulfillReadQueue() {\n        while (readQueue.length > 0 && resultQueue.length > 0) {\n            const { resolve } = readQueue.shift();\n            const value = resultQueue.shift();\n            resolve({ done: false, value });\n        }\n        while (readQueue.length > 0 && inflightCount === 0 && ended) {\n            const { resolve, reject } = readQueue.shift();\n            if (lastError) {\n                reject(lastError);\n                lastError = null;\n            }\n            else {\n                resolve({ done: true, value: undefined });\n            }\n        }\n    }\n    async function fillQueue() {\n        if (ended) {\n            fulfillReadQueue();\n            return;\n        }\n        if (reading) {\n            return;\n        }\n        if (inflightCount + resultQueue.length >= concurrency) {\n            return;\n        }\n        reading = true;\n        inflightCount++;\n        try {\n            const { done, value } = await iterator.next();\n            if (done) {\n                ended = true;\n                inflightCount--;\n                fulfillReadQueue();\n            }\n            else {\n                mapAndQueue(value);\n            }\n        }\n        catch (error) {\n            ended = true;\n            inflightCount--;\n            lastError = error;\n            fulfillReadQueue();\n        }\n        reading = false;\n        fillQueue();\n    }\n    async function mapAndQueue(itrValue) {\n        try {\n            const value = await func(itrValue);\n            resultQueue.push(value);\n        }\n        catch (error) {\n            ended = true;\n            lastError = error;\n        }\n        inflightCount--;\n        fulfillReadQueue();\n        fillQueue();\n    }\n    async function next() {\n        if (resultQueue.length === 0) {\n            const deferred = defer();\n            readQueue.push(deferred);\n            fillQueue();\n            return deferred.promise;\n        }\n        const value = resultQueue.shift();\n        fillQueue();\n        return { done: false, value };\n    }\n    const asyncIterableIterator = {\n        next,\n        [Symbol.asyncIterator]: () => asyncIterableIterator,\n    };\n    return asyncIterableIterator;\n}\nfunction transform(concurrency, func, iterable) {\n    if (func === undefined) {\n        return (curriedFunc, curriedIterable) => curriedIterable\n            ? transform(concurrency, curriedFunc, curriedIterable)\n            : transform(concurrency, curriedFunc);\n    }\n    if (iterable === undefined) {\n        return (curriedIterable) => transform(concurrency, func, curriedIterable);\n    }\n    return _transform(concurrency, func, iterable);\n}\n\nasync function _writeToStream(stream, iterable) {\n    let lastError = null;\n    let errCb = null;\n    let drainCb = null;\n    const notifyError = err => {\n        lastError = err;\n        if (errCb) {\n            errCb(err);\n        }\n    };\n    const notifyDrain = () => {\n        if (drainCb) {\n            drainCb();\n        }\n    };\n    const cleanup = () => {\n        stream.removeListener('error', notifyError);\n        stream.removeListener('drain', notifyDrain);\n    };\n    stream.once('error', notifyError);\n    const waitForDrain = () => new Promise((resolve, reject) => {\n        if (lastError) {\n            return reject(lastError);\n        }\n        stream.once('drain', notifyDrain);\n        drainCb = resolve;\n        errCb = reject;\n    });\n    for await (const value of iterable) {\n        if (stream.write(value) === false) {\n            await waitForDrain();\n        }\n        if (lastError) {\n            break;\n        }\n    }\n    cleanup();\n    if (lastError) {\n        throw lastError;\n    }\n}\nfunction writeToStream(stream, iterable) {\n    if (iterable === undefined) {\n        return (curriedIterable) => _writeToStream(stream, curriedIterable);\n    }\n    return _writeToStream(stream, iterable);\n}\n\nexport { batch, batchWithTimeout, buffer, collect, concat, consume, filter, flatMap, flatTransform, flatten, fromStream, getIterator, map, merge, parallelFlatMap, parallelMap, parallelMerge, pipeline, reduce, take, tap, throttle, time, transform, writeToStream };\n","function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n","var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n","module.exports = require('./lib/retry');","'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n","'use strict'\n\n/**\n * Returns the last item of an (async) iterable, unless empty, in which case\n * return `undefined`.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst last = async (source) => {\n  let res\n\n  for await (const entry of source) {\n    res = entry\n  }\n\n  return res\n}\n\nmodule.exports = last\n","const rawPipe = (...fns) => {\n  let res\n  while (fns.length) {\n    res = fns.shift()(res)\n  }\n  return res\n}\n\nconst isIterable = obj => obj && (\n  typeof obj[Symbol.asyncIterator] === 'function' ||\n  typeof obj[Symbol.iterator] === 'function' ||\n  typeof obj.next === 'function' // Probably, right?\n)\n\nconst isDuplex = obj => obj && typeof obj.sink === 'function' && isIterable(obj.source)\n\nconst duplexPipelineFn = duplex => source => {\n  duplex.sink(source) // TODO: error on sink side is unhandled rejection - this is the same as pull streams\n  return duplex.source\n}\n\nconst pipe = (...fns) => {\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(fns[0])) {\n    const duplex = fns[0]\n    fns[0] = () => duplex.source\n  // Iterable at start: wrap in function\n  } else if (isIterable(fns[0])) {\n    const source = fns[0]\n    fns[0] = () => source\n  }\n\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink\n    }\n  }\n\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i])\n      }\n    }\n  }\n\n  return rawPipe(...fns)\n}\n\nmodule.exports = pipe\nmodule.exports.pipe = pipe\nmodule.exports.rawPipe = rawPipe\nmodule.exports.isIterable = isIterable\nmodule.exports.isDuplex = isDuplex\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  if (Number.MAX_SAFE_INTEGER && num > Number.MAX_SAFE_INTEGER) {\n    encode.bytes = 0\n    throw new RangeError('Could not encode varint')\n  }\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l || shift > 49) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = data => {\n  const code = varint.decode(data);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;\nencodeArray.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;\nencodeMap.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import varint from 'varint';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor';\nconst CIDV0_BYTES = {\n  SHA2_256: 18,\n  LENGTH: 32,\n  DAG_PB: 112\n};\nasync function readVarint(reader) {\n  const bytes = await reader.upTo(8);\n  const i = varint.decode(bytes);\n  reader.seek(varint.decode.bytes);\n  return i;\n}\nexport async function readHeader(reader) {\n  const length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)');\n  }\n  const header = await reader.exactly(length);\n  reader.seek(length);\n  const block = decodeDagCbor(header);\n  if (block == null || Array.isArray(block) || typeof block !== 'object') {\n    throw new Error('Invalid CAR header format');\n  }\n  if (block.version !== 1) {\n    if (typeof block.version === 'string') {\n      throw new Error(`Invalid CAR version: \"${ block.version }\"`);\n    }\n    throw new Error(`Invalid CAR version: ${ block.version }`);\n  }\n  if (!Array.isArray(block.roots)) {\n    throw new Error('Invalid CAR header format');\n  }\n  if (Object.keys(block).filter(p => p !== 'roots' && p !== 'version').length) {\n    throw new Error('Invalid CAR header format');\n  }\n  return block;\n}\nasync function readMultihash(reader) {\n  const bytes = await reader.upTo(8);\n  varint.decode(bytes);\n  const codeLength = varint.decode.bytes;\n  const length = varint.decode(bytes.subarray(varint.decode.bytes));\n  const lengthLength = varint.decode.bytes;\n  const mhLength = codeLength + lengthLength + length;\n  const multihash = await reader.exactly(mhLength);\n  reader.seek(mhLength);\n  return multihash;\n}\nasync function readCid(reader) {\n  const first = await reader.exactly(2);\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    const bytes = await reader.exactly(34);\n    reader.seek(34);\n    const multihash = Digest.decode(bytes);\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash);\n  }\n  const version = await readVarint(reader);\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${ version })`);\n  }\n  const codec = await readVarint(reader);\n  const bytes = await readMultihash(reader);\n  const multihash = Digest.decode(bytes);\n  return CID.create(version, codec, multihash);\n}\nexport async function readBlockHead(reader) {\n  const start = reader.pos;\n  let length = await readVarint(reader);\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)');\n  }\n  length += reader.pos - start;\n  const cid = await readCid(reader);\n  const blockLength = length - (reader.pos - start);\n  return {\n    cid,\n    length,\n    blockLength\n  };\n}\nasync function readBlock(reader) {\n  const {cid, blockLength} = await readBlockHead(reader);\n  const bytes = await reader.exactly(blockLength);\n  reader.seek(blockLength);\n  return {\n    bytes,\n    cid\n  };\n}\nasync function readBlockIndex(reader) {\n  const offset = reader.pos;\n  const {cid, length, blockLength} = await readBlockHead(reader);\n  const index = {\n    cid,\n    length,\n    blockLength,\n    offset,\n    blockOffset: reader.pos\n  };\n  reader.seek(index.blockLength);\n  return index;\n}\nexport function createDecoder(reader) {\n  const headerPromise = readHeader(reader);\n  return {\n    header: () => headerPromise,\n    async *blocks() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader);\n      }\n    },\n    async *blocksIndex() {\n      await headerPromise;\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader);\n      }\n    }\n  };\n}\nexport function bytesReader(bytes) {\n  let pos = 0;\n  return {\n    async upTo(length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos));\n    },\n    async exactly(length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data');\n      }\n      return bytes.subarray(pos, pos + length);\n    },\n    seek(length) {\n      pos += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function chunkReader(readChunk) {\n  let pos = 0;\n  let have = 0;\n  let offset = 0;\n  let currentChunk = new Uint8Array(0);\n  const read = async length => {\n    have = currentChunk.length - offset;\n    const bufa = [currentChunk.subarray(offset)];\n    while (have < length) {\n      const chunk = await readChunk();\n      if (chunk == null) {\n        break;\n      }\n      if (have < 0) {\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have));\n        }\n      } else {\n        bufa.push(chunk);\n      }\n      have += chunk.length;\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0));\n    let off = 0;\n    for (const b of bufa) {\n      currentChunk.set(b, off);\n      off += b.length;\n    }\n    offset = 0;\n  };\n  return {\n    async upTo(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length));\n    },\n    async exactly(length) {\n      if (currentChunk.length - offset < length) {\n        await read(length);\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data');\n      }\n      return currentChunk.subarray(offset, offset + length);\n    },\n    seek(length) {\n      pos += length;\n      offset += length;\n    },\n    get pos() {\n      return pos;\n    }\n  };\n}\nexport function asyncIterableReader(asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  async function readChunk() {\n    const next = await iterator.next();\n    if (next.done) {\n      return null;\n    }\n    return next.value;\n  }\n  return chunkReader(readChunk);\n}","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarIteratorBase {\n  constructor(version, roots, iterable) {\n    this._version = version;\n    this._roots = roots;\n    this._iterable = iterable;\n    this._decoded = false;\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n}\nexport class CarBlockIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    return this._iterable[Symbol.asyncIterator]();\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarBlockIterator(version, roots, iterator);\n  }\n}\nexport class CarCIDIterator extends CarIteratorBase {\n  [Symbol.asyncIterator]() {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once');\n    }\n    if (!this._iterable) {\n      throw new Error('Block iterable not found');\n    }\n    this._decoded = true;\n    const iterable = this._iterable[Symbol.asyncIterator]();\n    return {\n      async next() {\n        const next = await iterable.next();\n        if (next.done) {\n          return next;\n        }\n        return {\n          done: false,\n          value: next.value.cid\n        };\n      }\n    };\n  }\n  static async fromBytes(bytes) {\n    const {version, roots, iterator} = await fromBytes(bytes);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n  static async fromIterable(asyncIterable) {\n    const {version, roots, iterator} = await fromIterable(asyncIterable);\n    return new CarCIDIterator(version, roots, iterator);\n  }\n}\nasync function fromBytes(bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array');\n  }\n  return decodeIterator(bytesReader(bytes));\n}\nasync function fromIterable(asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable');\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable));\n}\nasync function decodeIterator(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  return {\n    version,\n    roots,\n    iterator: decoder.blocks()\n  };\n}","import varint from 'varint';\nimport { encode as dagCborEncode } from '@ipld/dag-cbor';\nexport function createHeader(roots) {\n  const headerBytes = dagCborEncode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint.encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      if (bytes.length) {\n        await writer.write(bytes);\n      }\n    },\n    async close() {\n      return writer.end();\n    }\n  };\n}\nexport {\n  createEncoder\n};","function noop() {\n}\nexport function create() {\n  const chunkQueue = [];\n  let drainer = null;\n  let drainerResolver = noop;\n  let ended = false;\n  let outWait = null;\n  let outWaitResolver = noop;\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise(resolve => {\n        drainerResolver = () => {\n          drainer = null;\n          drainerResolver = noop;\n          resolve();\n        };\n      });\n    }\n    return drainer;\n  };\n  const writer = {\n    write(chunk) {\n      chunkQueue.push(chunk);\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    },\n    async end() {\n      ended = true;\n      const drainer = makeDrainer();\n      outWaitResolver();\n      return drainer;\n    }\n  };\n  const iterator = {\n    async next() {\n      const chunk = chunkQueue.shift();\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver();\n        }\n        return {\n          done: false,\n          value: chunk\n        };\n      }\n      if (ended) {\n        drainerResolver();\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (!outWait) {\n        outWait = new Promise(resolve => {\n          outWaitResolver = () => {\n            outWait = null;\n            outWaitResolver = noop;\n            return resolve(iterator.next());\n          };\n        });\n      }\n      return outWait;\n    }\n  };\n  return {\n    writer,\n    iterator\n  };\n}","import { CID } from 'multiformats/cid';\nimport {\n  createEncoder,\n  createHeader\n} from './encoder.js';\nimport { create as iteratorChannel } from './iterator-channel.js';\nimport {\n  bytesReader,\n  readHeader\n} from './decoder.js';\nexport class CarWriter {\n  constructor(roots, encoder) {\n    this._encoder = encoder;\n    this._mutex = encoder.setRoots(roots);\n    this._ended = false;\n  }\n  async put(block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    const cid = CID.asCID(block.cid);\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects');\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({\n      cid,\n      bytes: block.bytes\n    }));\n    return this._mutex;\n  }\n  async close() {\n    if (this._ended) {\n      throw new Error('Already closed');\n    }\n    await this._mutex;\n    this._ended = true;\n    return this._encoder.close();\n  }\n  static create(roots) {\n    roots = toRoots(roots);\n    const {encoder, iterator} = encodeWriter();\n    const writer = new CarWriter(roots, encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static createAppender() {\n    const {encoder, iterator} = encodeWriter();\n    encoder.setRoots = () => Promise.resolve();\n    const writer = new CarWriter([], encoder);\n    const out = new CarWriterOut(iterator);\n    return {\n      writer,\n      out\n    };\n  }\n  static async updateRootsInBytes(bytes, roots) {\n    const reader = bytesReader(bytes);\n    await readHeader(reader);\n    const newHeader = createHeader(roots);\n    if (reader.pos !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${ reader.pos } bytes, new header is ${ newHeader.length } bytes)`);\n    }\n    bytes.set(newHeader, 0);\n    return bytes;\n  }\n}\nexport class CarWriterOut {\n  constructor(iterator) {\n    this._iterator = iterator;\n  }\n  [Symbol.asyncIterator]() {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported');\n    }\n    this._iterating = true;\n    return this._iterator;\n  }\n}\nfunction encodeWriter() {\n  const iw = iteratorChannel();\n  const {writer, iterator} = iw;\n  const encoder = createEncoder(writer);\n  return {\n    encoder,\n    iterator\n  };\n}\nfunction toRoots(roots) {\n  if (roots === undefined) {\n    return [];\n  }\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots);\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    return [cid];\n  }\n  const _roots = [];\n  for (const root of roots) {\n    const _root = CID.asCID(root);\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs');\n    }\n    _roots.push(_root);\n  }\n  return _roots;\n}\nexport const __browser = true;","'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","module.exports = require('./lib/murmurHash3js');\n","import { from } from 'multiformats/hashes/hasher';\nimport { bytes } from 'multiformats';\nimport mur from 'murmurhash3js-revisited';\nfunction fromNumberTo32BitBuf(number) {\n  const bytes = new Array(4);\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 255;\n    number = number >> 8;\n  }\n  return new Uint8Array(bytes);\n}\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 35,\n  encode: input => fromNumberTo32BitBuf(mur.x86.hash32(input))\n});\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 34,\n  encode: input => bytes.fromHex(mur.x64.hash128(input))\n});","import mergeOptions from 'merge-options';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { murmur3128 } from '@multiformats/murmur3';\nasync function hamtHashFn(buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n}\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced',\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file',\n  cidVersion: 0,\n  progress: () => () => {\n  },\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  polynomial: 17437180132763652,\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 34,\n  hamtBucketBits: 8\n};\nexport default (options = {}) => {\n  const defaults = mergeOptions.bind({ ignoreUndefined: true });\n  return defaults(defaultOptions, options);\n};","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","import $protobuf from 'protobufjs/minimal.js';\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\nconst $root = $protobuf.roots['ipfs-unixfs'] || ($protobuf.roots['ipfs-unixfs'] = {});\nexport const Data = $root.Data = (() => {\n  function Data(p) {\n    this.blocksizes = [];\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Data.prototype.Type = 0;\n  Data.prototype.Data = $util.newBuffer([]);\n  Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.blocksizes = $util.emptyArray;\n  Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  Data.prototype.mode = 0;\n  Data.prototype.mtime = null;\n  Data.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int32(m.Type);\n    if (m.Data != null && Object.hasOwnProperty.call(m, 'Data'))\n      w.uint32(18).bytes(m.Data);\n    if (m.filesize != null && Object.hasOwnProperty.call(m, 'filesize'))\n      w.uint32(24).uint64(m.filesize);\n    if (m.blocksizes != null && m.blocksizes.length) {\n      for (var i = 0; i < m.blocksizes.length; ++i)\n        w.uint32(32).uint64(m.blocksizes[i]);\n    }\n    if (m.hashType != null && Object.hasOwnProperty.call(m, 'hashType'))\n      w.uint32(40).uint64(m.hashType);\n    if (m.fanout != null && Object.hasOwnProperty.call(m, 'fanout'))\n      w.uint32(48).uint64(m.fanout);\n    if (m.mode != null && Object.hasOwnProperty.call(m, 'mode'))\n      w.uint32(56).uint32(m.mode);\n    if (m.mtime != null && Object.hasOwnProperty.call(m, 'mtime'))\n      $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n    return w;\n  };\n  Data.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Type = r.int32();\n        break;\n      case 2:\n        m.Data = r.bytes();\n        break;\n      case 3:\n        m.filesize = r.uint64();\n        break;\n      case 4:\n        if (!(m.blocksizes && m.blocksizes.length))\n          m.blocksizes = [];\n        if ((t & 7) === 2) {\n          var c2 = r.uint32() + r.pos;\n          while (r.pos < c2)\n            m.blocksizes.push(r.uint64());\n        } else\n          m.blocksizes.push(r.uint64());\n        break;\n      case 5:\n        m.hashType = r.uint64();\n        break;\n      case 6:\n        m.fanout = r.uint64();\n        break;\n      case 7:\n        m.mode = r.uint32();\n        break;\n      case 8:\n        m.mtime = $root.UnixTime.decode(r, r.uint32());\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Type'))\n      throw $util.ProtocolError('missing required \\'Type\\'', { instance: m });\n    return m;\n  };\n  Data.fromObject = function fromObject(d) {\n    if (d instanceof $root.Data)\n      return d;\n    var m = new $root.Data();\n    switch (d.Type) {\n    case 'Raw':\n    case 0:\n      m.Type = 0;\n      break;\n    case 'Directory':\n    case 1:\n      m.Type = 1;\n      break;\n    case 'File':\n    case 2:\n      m.Type = 2;\n      break;\n    case 'Metadata':\n    case 3:\n      m.Type = 3;\n      break;\n    case 'Symlink':\n    case 4:\n      m.Type = 4;\n      break;\n    case 'HAMTShard':\n    case 5:\n      m.Type = 5;\n      break;\n    }\n    if (d.Data != null) {\n      if (typeof d.Data === 'string')\n        $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n      else if (d.Data.length)\n        m.Data = d.Data;\n    }\n    if (d.filesize != null) {\n      if ($util.Long)\n        (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n      else if (typeof d.filesize === 'string')\n        m.filesize = parseInt(d.filesize, 10);\n      else if (typeof d.filesize === 'number')\n        m.filesize = d.filesize;\n      else if (typeof d.filesize === 'object')\n        m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n    }\n    if (d.blocksizes) {\n      if (!Array.isArray(d.blocksizes))\n        throw TypeError('.Data.blocksizes: array expected');\n      m.blocksizes = [];\n      for (var i = 0; i < d.blocksizes.length; ++i) {\n        if ($util.Long)\n          (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n        else if (typeof d.blocksizes[i] === 'string')\n          m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n        else if (typeof d.blocksizes[i] === 'number')\n          m.blocksizes[i] = d.blocksizes[i];\n        else if (typeof d.blocksizes[i] === 'object')\n          m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n      }\n    }\n    if (d.hashType != null) {\n      if ($util.Long)\n        (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n      else if (typeof d.hashType === 'string')\n        m.hashType = parseInt(d.hashType, 10);\n      else if (typeof d.hashType === 'number')\n        m.hashType = d.hashType;\n      else if (typeof d.hashType === 'object')\n        m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n    }\n    if (d.fanout != null) {\n      if ($util.Long)\n        (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n      else if (typeof d.fanout === 'string')\n        m.fanout = parseInt(d.fanout, 10);\n      else if (typeof d.fanout === 'number')\n        m.fanout = d.fanout;\n      else if (typeof d.fanout === 'object')\n        m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n    }\n    if (d.mode != null) {\n      m.mode = d.mode >>> 0;\n    }\n    if (d.mtime != null) {\n      if (typeof d.mtime !== 'object')\n        throw TypeError('.Data.mtime: object expected');\n      m.mtime = $root.UnixTime.fromObject(d.mtime);\n    }\n    return m;\n  };\n  Data.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.blocksizes = [];\n    }\n    if (o.defaults) {\n      d.Type = o.enums === String ? 'Raw' : 0;\n      if (o.bytes === String)\n        d.Data = '';\n      else {\n        d.Data = [];\n        if (o.bytes !== Array)\n          d.Data = $util.newBuffer(d.Data);\n      }\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.filesize = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.hashType = o.longs === String ? '0' : 0;\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, true);\n        d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.fanout = o.longs === String ? '0' : 0;\n      d.mode = 0;\n      d.mtime = null;\n    }\n    if (m.Type != null && m.hasOwnProperty('Type')) {\n      d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n    }\n    if (m.Data != null && m.hasOwnProperty('Data')) {\n      d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n    }\n    if (m.filesize != null && m.hasOwnProperty('filesize')) {\n      if (typeof m.filesize === 'number')\n        d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n      else\n        d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n    }\n    if (m.blocksizes && m.blocksizes.length) {\n      d.blocksizes = [];\n      for (var j = 0; j < m.blocksizes.length; ++j) {\n        if (typeof m.blocksizes[j] === 'number')\n          d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n        else\n          d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n      }\n    }\n    if (m.hashType != null && m.hasOwnProperty('hashType')) {\n      if (typeof m.hashType === 'number')\n        d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n      else\n        d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n    }\n    if (m.fanout != null && m.hasOwnProperty('fanout')) {\n      if (typeof m.fanout === 'number')\n        d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n      else\n        d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n    }\n    if (m.mode != null && m.hasOwnProperty('mode')) {\n      d.mode = m.mode;\n    }\n    if (m.mtime != null && m.hasOwnProperty('mtime')) {\n      d.mtime = $root.UnixTime.toObject(m.mtime, o);\n    }\n    return d;\n  };\n  Data.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  Data.DataType = function () {\n    const valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[0] = 'Raw'] = 0;\n    values[valuesById[1] = 'Directory'] = 1;\n    values[valuesById[2] = 'File'] = 2;\n    values[valuesById[3] = 'Metadata'] = 3;\n    values[valuesById[4] = 'Symlink'] = 4;\n    values[valuesById[5] = 'HAMTShard'] = 5;\n    return values;\n  }();\n  return Data;\n})();\nexport const UnixTime = $root.UnixTime = (() => {\n  function UnixTime(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n  UnixTime.prototype.FractionalNanoseconds = 0;\n  UnixTime.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    w.uint32(8).int64(m.Seconds);\n    if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, 'FractionalNanoseconds'))\n      w.uint32(21).fixed32(m.FractionalNanoseconds);\n    return w;\n  };\n  UnixTime.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.Seconds = r.int64();\n        break;\n      case 2:\n        m.FractionalNanoseconds = r.fixed32();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    if (!m.hasOwnProperty('Seconds'))\n      throw $util.ProtocolError('missing required \\'Seconds\\'', { instance: m });\n    return m;\n  };\n  UnixTime.fromObject = function fromObject(d) {\n    if (d instanceof $root.UnixTime)\n      return d;\n    var m = new $root.UnixTime();\n    if (d.Seconds != null) {\n      if ($util.Long)\n        (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n      else if (typeof d.Seconds === 'string')\n        m.Seconds = parseInt(d.Seconds, 10);\n      else if (typeof d.Seconds === 'number')\n        m.Seconds = d.Seconds;\n      else if (typeof d.Seconds === 'object')\n        m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n    }\n    if (d.FractionalNanoseconds != null) {\n      m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n    }\n    return m;\n  };\n  UnixTime.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      if ($util.Long) {\n        var n = new $util.Long(0, 0, false);\n        d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n      } else\n        d.Seconds = o.longs === String ? '0' : 0;\n      d.FractionalNanoseconds = 0;\n    }\n    if (m.Seconds != null && m.hasOwnProperty('Seconds')) {\n      if (typeof m.Seconds === 'number')\n        d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n      else\n        d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n    }\n    if (m.FractionalNanoseconds != null && m.hasOwnProperty('FractionalNanoseconds')) {\n      d.FractionalNanoseconds = m.FractionalNanoseconds;\n    }\n    return d;\n  };\n  UnixTime.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return UnixTime;\n})();\nexport const Metadata = $root.Metadata = (() => {\n  function Metadata(p) {\n    if (p)\n      for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n        if (p[ks[i]] != null)\n          this[ks[i]] = p[ks[i]];\n  }\n  Metadata.prototype.MimeType = '';\n  Metadata.encode = function encode(m, w) {\n    if (!w)\n      w = $Writer.create();\n    if (m.MimeType != null && Object.hasOwnProperty.call(m, 'MimeType'))\n      w.uint32(10).string(m.MimeType);\n    return w;\n  };\n  Metadata.decode = function decode(r, l) {\n    if (!(r instanceof $Reader))\n      r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n      case 1:\n        m.MimeType = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n      }\n    }\n    return m;\n  };\n  Metadata.fromObject = function fromObject(d) {\n    if (d instanceof $root.Metadata)\n      return d;\n    var m = new $root.Metadata();\n    if (d.MimeType != null) {\n      m.MimeType = String(d.MimeType);\n    }\n    return m;\n  };\n  Metadata.toObject = function toObject(m, o) {\n    if (!o)\n      o = {};\n    var d = {};\n    if (o.defaults) {\n      d.MimeType = '';\n    }\n    if (m.MimeType != null && m.hasOwnProperty('MimeType')) {\n      d.MimeType = m.MimeType;\n    }\n    return d;\n  };\n  Metadata.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Metadata;\n})();\nexport {\n  $root as default\n};","import errcode from 'err-code';\nimport * as Pb from './unixfs.js';\nconst PBData = Pb.Data;\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n];\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n];\nconst DEFAULT_FILE_MODE = parseInt('0644', 8);\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8);\nexport function parseMode(mode) {\n  if (mode == null) {\n    return undefined;\n  }\n  if (typeof mode === 'number') {\n    return mode & 4095;\n  }\n  mode = mode.toString();\n  if (mode.substring(0, 1) === '0') {\n    return parseInt(mode, 8) & 4095;\n  }\n  return parseInt(mode, 10) & 4095;\n}\nexport function parseMtime(input) {\n  if (input == null) {\n    return undefined;\n  }\n  let mtime;\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    };\n  }\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    };\n  }\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    };\n  }\n  if (input instanceof Date) {\n    const ms = input.getTime();\n    const secs = Math.floor(ms / 1000);\n    mtime = {\n      secs: secs,\n      nsecs: (ms - secs * 1000) * 1000\n    };\n  }\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined;\n  }\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');\n  }\n  return mtime;\n}\nclass UnixFS {\n  static unmarshal(marshaled) {\n    const message = PBData.decode(marshaled);\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    });\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime ? {\n        secs: decoded.mtime.Seconds,\n        nsecs: decoded.mtime.FractionalNanoseconds\n      } : undefined\n    });\n    data._originalMode = decoded.mode || 0;\n    return data;\n  }\n  constructor(options = { type: 'file' }) {\n    const {type, data, blockSizes, hashType, fanout, mtime, mode} = options;\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    this.type = type || 'file';\n    this.data = data;\n    this.hashType = hashType;\n    this.fanout = fanout;\n    this.blockSizes = blockSizes || [];\n    this._originalMode = 0;\n    this.mode = parseMode(mode);\n    if (mtime) {\n      this.mtime = parseMtime(mtime);\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0;\n      }\n    }\n  }\n  set mode(mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE;\n    const parsedMode = parseMode(mode);\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode;\n    }\n  }\n  get mode() {\n    return this._mode;\n  }\n  isDirectory() {\n    return Boolean(this.type && dirTypes.includes(this.type));\n  }\n  addBlockSize(size) {\n    this.blockSizes.push(size);\n  }\n  removeBlockSize(index) {\n    this.blockSizes.splice(index, 1);\n  }\n  fileSize() {\n    if (this.isDirectory()) {\n      return 0;\n    }\n    let sum = 0;\n    this.blockSizes.forEach(size => {\n      sum += size;\n    });\n    if (this.data) {\n      sum += this.data.length;\n    }\n    return sum;\n  }\n  marshal() {\n    let type;\n    switch (this.type) {\n    case 'raw':\n      type = PBData.DataType.Raw;\n      break;\n    case 'directory':\n      type = PBData.DataType.Directory;\n      break;\n    case 'file':\n      type = PBData.DataType.File;\n      break;\n    case 'metadata':\n      type = PBData.DataType.Metadata;\n      break;\n    case 'symlink':\n      type = PBData.DataType.Symlink;\n      break;\n    case 'hamt-sharded-directory':\n      type = PBData.DataType.HAMTShard;\n      break;\n    default:\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE');\n    }\n    let data = this.data;\n    if (!this.data || !this.data.length) {\n      data = undefined;\n    }\n    let mode;\n    if (this.mode != null) {\n      mode = this._originalMode & 4294963200 | (parseMode(this.mode) || 0);\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined;\n      }\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined;\n      }\n    }\n    let mtime;\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime);\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        };\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds;\n        }\n      }\n    }\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    };\n    return PBData.encode(pbData).finish();\n  }\n}\nexport {\n  UnixFS\n};","const textDecoder = new TextDecoder();\nfunction decodeVarint(bytes, offset) {\n  let v = 0;\n  for (let shift = 0;; shift += 7) {\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow');\n    }\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data');\n    }\n    const b = bytes[offset++];\n    v += shift < 28 ? (b & 127) << shift : (b & 127) * 2 ** shift;\n    if (b < 128) {\n      break;\n    }\n  }\n  return [\n    v,\n    offset\n  ];\n}\nfunction decodeBytes(bytes, offset) {\n  let byteLen;\n  [byteLen, offset] = decodeVarint(bytes, offset);\n  const postOffset = offset + byteLen;\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length');\n  }\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data');\n  }\n  return [\n    bytes.subarray(offset, postOffset),\n    postOffset\n  ];\n}\nfunction decodeKey(bytes, index) {\n  let wire;\n  [wire, index] = decodeVarint(bytes, index);\n  return [\n    wire & 7,\n    wire >> 3,\n    index\n  ];\n}\nfunction decodeLink(bytes) {\n  const link = {};\n  const l = bytes.length;\n  let index = 0;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Hash`);\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash');\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash');\n      }\n      ;\n      [link.Hash, index] = decodeBytes(bytes, index);\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section');\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Name`);\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name');\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      link.Name = textDecoder.decode(byts);\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section');\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${ wireType }) for Tsize`);\n      }\n      ;\n      [link.Tsize, index] = decodeVarint(bytes, index);\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data');\n  }\n  return link;\n}\nexport function decodeNode(bytes) {\n  const l = bytes.length;\n  let index = 0;\n  let links;\n  let linksBeforeData = false;\n  let data;\n  while (index < l) {\n    let wireType, fieldNum;\n    [wireType, fieldNum, index] = decodeKey(bytes, index);\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${ wireType }`);\n    }\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section');\n      }\n      ;\n      [data, index] = decodeBytes(bytes, index);\n      if (links) {\n        linksBeforeData = true;\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) {\n        throw new Error('protobuf: (PBNode) duplicate Links section');\n      } else if (!links) {\n        links = [];\n      }\n      let byts;\n      [byts, index] = decodeBytes(bytes, index);\n      links.push(decodeLink(byts));\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${ fieldNum }`);\n    }\n  }\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data');\n  }\n  const node = {};\n  if (data) {\n    node.Data = data;\n  }\n  node.Links = links || [];\n  return node;\n}","const textEncoder = new TextEncoder();\nconst maxInt32 = 2 ** 32;\nconst maxUInt32 = 2 ** 31;\nfunction encodeLink(link, bytes) {\n  let i = bytes.length;\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative');\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding');\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1;\n    bytes[i] = 24;\n  }\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name);\n    i -= nameBytes.length;\n    bytes.set(nameBytes, i);\n    i = encodeVarint(bytes, i, nameBytes.length) - 1;\n    bytes[i] = 18;\n  }\n  if (link.Hash) {\n    i -= link.Hash.length;\n    bytes.set(link.Hash, i);\n    i = encodeVarint(bytes, i, link.Hash.length) - 1;\n    bytes[i] = 10;\n  }\n  return bytes.length - i;\n}\nexport function encodeNode(node) {\n  const size = sizeNode(node);\n  const bytes = new Uint8Array(size);\n  let i = size;\n  if (node.Data) {\n    i -= node.Data.length;\n    bytes.set(node.Data, i);\n    i = encodeVarint(bytes, i, node.Data.length) - 1;\n    bytes[i] = 10;\n  }\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i));\n      i -= size;\n      i = encodeVarint(bytes, i, size) - 1;\n      bytes[i] = 18;\n    }\n  }\n  return bytes;\n}\nfunction sizeLink(link) {\n  let n = 0;\n  if (link.Hash) {\n    const l = link.Hash.length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length;\n    n += 1 + l + sov(l);\n  }\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize);\n  }\n  return n;\n}\nfunction sizeNode(node) {\n  let n = 0;\n  if (node.Data) {\n    const l = node.Data.length;\n    n += 1 + l + sov(l);\n  }\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link);\n      n += 1 + l + sov(l);\n    }\n  }\n  return n;\n}\nfunction encodeVarint(bytes, offset, v) {\n  offset -= sov(v);\n  const base = offset;\n  while (v >= maxUInt32) {\n    bytes[offset++] = v & 127 | 128;\n    v /= 128;\n  }\n  while (v >= 128) {\n    bytes[offset++] = v & 127 | 128;\n    v >>>= 7;\n  }\n  bytes[offset] = v;\n  return base;\n}\nfunction sov(x) {\n  if (x % 2 === 0) {\n    x++;\n  }\n  return Math.floor((len64(x) + 6) / 7);\n}\nfunction len64(x) {\n  let n = 0;\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32);\n    n = 32;\n  }\n  if (x >= 1 << 16) {\n    x >>>= 16;\n    n += 16;\n  }\n  if (x >= 1 << 8) {\n    x >>>= 8;\n    n += 8;\n  }\n  return n + len8tab[x];\n}\nconst len8tab = [\n  0,\n  1,\n  2,\n  2,\n  3,\n  3,\n  3,\n  3,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  4,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  6,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  7,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8,\n  8\n];","import { CID } from 'multiformats/cid';\nconst pbNodeProperties = [\n  'Data',\n  'Links'\n];\nconst pbLinkProperties = [\n  'Hash',\n  'Name',\n  'Tsize'\n];\nconst textEncoder = new TextEncoder();\nfunction linkComparator(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  const abuf = a.Name ? textEncoder.encode(a.Name) : [];\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : [];\n  let x = abuf.length;\n  let y = bbuf.length;\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i];\n      y = bbuf[i];\n      break;\n    }\n  }\n  return x < y ? -1 : y < x ? 1 : 0;\n}\nfunction hasOnlyProperties(node, properties) {\n  return !Object.keys(node).some(p => !properties.includes(p));\n}\nfunction asLink(link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link);\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n    return { Hash };\n  }\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbl = {};\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash);\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash);\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash);\n        }\n      }\n    } catch (e) {\n      throw new TypeError(`Invalid DAG-PB form: ${ e.message }`);\n    }\n    if (cid) {\n      pbl.Hash = cid;\n    }\n  }\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name;\n  }\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize;\n  }\n  return pbl;\n}\nexport function prepare(node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node };\n  }\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  const pbn = {};\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data);\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data;\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  }\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink);\n      pbn.Links.sort(linkComparator);\n    } else {\n      throw new TypeError('Invalid DAG-PB form');\n    }\n  } else {\n    pbn.Links = [];\n  }\n  return pbn;\n}\nexport function validate(node) {\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form');\n  }\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)');\n  }\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)');\n  }\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)');\n  }\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i];\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)');\n    }\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)');\n    }\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)');\n    }\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)');\n    }\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)');\n    }\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)');\n    }\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)');\n    }\n  }\n}\nexport function createNode(data, links = []) {\n  return prepare({\n    Data: data,\n    Links: links\n  });\n}\nexport function createLink(name, size, cid) {\n  return asLink({\n    Hash: cid,\n    Name: name,\n    Tsize: size\n  });\n}","import { CID } from 'multiformats/cid';\nimport { decodeNode } from './pb-decode.js';\nimport { encodeNode } from './pb-encode.js';\nimport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n} from './util.js';\nexport const name = 'dag-pb';\nexport const code = 112;\nexport function encode(node) {\n  validate(node);\n  const pbn = {};\n  if (node.Links) {\n    pbn.Links = node.Links.map(l => {\n      const link = {};\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes;\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  if (node.Data) {\n    pbn.Data = node.Data;\n  }\n  return encodeNode(pbn);\n}\nexport function decode(bytes) {\n  const pbn = decodeNode(bytes);\n  const node = {};\n  if (pbn.Data) {\n    node.Data = pbn.Data;\n  }\n  if (pbn.Links) {\n    node.Links = pbn.Links.map(l => {\n      const link = {};\n      try {\n        link.Hash = CID.decode(l.Hash);\n      } catch (e) {\n      }\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID');\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name;\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize;\n      }\n      return link;\n    });\n  }\n  return node;\n}\nexport {\n  prepare,\n  validate,\n  createNode,\n  createLink\n};","import { CID } from 'multiformats/cid';\nimport * as dagPb from '@ipld/dag-pb';\nimport { sha256 } from 'multiformats/hashes/sha2';\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb;\n  }\n  if (!options.hasher) {\n    options.hasher = sha256;\n  }\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1;\n  }\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1;\n  }\n  const multihash = await options.hasher.digest(buffer);\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash);\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, { signal: options.signal });\n  }\n  return cid;\n};\nexport default persist;","import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({ Data: unixfs.marshal() }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\nexport default dirBuilder;","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","import all from 'it-all';\nasync function flat(source, reduce) {\n  return reduce(await all(source));\n}\nexport default flat;","import batch from 'it-batch';\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n  return roots[0];\n}\nexport default balanced;","import batch from 'it-batch';\nasync function trickleStream(source, reduce, options) {\n  const root = new Root(options.layerRepeat);\n  let iteration = 0;\n  let maxDepth = 1;\n  let subTree = root;\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce));\n      }\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++;\n      }\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration);\n      iteration++;\n    }\n    subTree.append(layer);\n  }\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce));\n  }\n  return root.reduce(reduce);\n}\nexport default trickleStream;\nclass SubTree {\n  constructor(maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth;\n    this.layerRepeat = layerRepeat;\n    this.currentDepth = 1;\n    this.iteration = iteration;\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    };\n  }\n  isFull() {\n    if (!this.root.data) {\n      return false;\n    }\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      this._addNextNodeToParent(this.node);\n      return false;\n    }\n    const distantRelative = this._findParent(this.node, this.currentDepth);\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative);\n      return false;\n    }\n    return true;\n  }\n  _addNextNodeToParent(parent) {\n    this.parent = parent;\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    };\n    parent.children.push(nextNode);\n    this.currentDepth = nextNode.depth;\n    this.node = nextNode;\n  }\n  append(layer) {\n    this.node.data = layer;\n  }\n  reduce(reduce) {\n    return this._reduce(this.root, reduce);\n  }\n  async _reduce(node, reduce) {\n    let children = [];\n    if (node.children.length) {\n      children = await Promise.all(node.children.filter(child => child.data).map(child => this._reduce(child, reduce)));\n    }\n    return reduce((node.data || []).concat(children));\n  }\n  _findParent(node, depth) {\n    const parent = node.parent;\n    if (!parent || parent.depth === 0) {\n      return;\n    }\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      return this._findParent(parent, depth);\n    }\n    return parent;\n  }\n}\nclass Root extends SubTree {\n  constructor(layerRepeat) {\n    super(0, layerRepeat);\n    this.root.depth = 0;\n    this.currentDepth = 1;\n  }\n  addChild(child) {\n    this.root.children.push(child);\n  }\n  reduce(reduce) {\n    return reduce((this.root.data || []).concat(this.root.children));\n  }\n}","import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* bufferImporter(file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path);\n      let unixfs;\n      const opts = {\n        codec: dagPb,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      };\n      if (options.rawLeaves) {\n        opts.codec = raw;\n        opts.cidVersion = 1;\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer\n        });\n        buffer = dagPb.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        });\n      }\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      };\n    };\n  }\n}\nexport default bufferImporter;","import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport persist from '../../utils/persist.js';\nimport {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport parallelBatch from 'it-parallel-batch';\nimport * as rawCodec from 'multiformats/codecs/raw';\nimport * as dagPb from '@ipld/dag-pb';\nimport dagFlat from './flat.js';\nimport dagBalanced from './balanced.js';\nimport dagTrickle from './trickle.js';\nimport bufferImporterFn from './buffer-importer.js';\nconst dagBuilders = {\n  flat: dagFlat,\n  balanced: dagBalanced,\n  trickle: dagTrickle\n};\nasync function* buildFileBatch(file, blockstore, options) {\n  let count = -1;\n  let previous;\n  let bufferImporter;\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter;\n  } else {\n    bufferImporter = bufferImporterFn;\n  }\n  for await (const entry of parallelBatch(bufferImporter(file, blockstore, options), options.blockWriteConcurrency)) {\n    count++;\n    if (count === 0) {\n      previous = entry;\n      continue;\n    } else if (count === 1 && previous) {\n      yield previous;\n      previous = null;\n    }\n    yield entry;\n  }\n  if (previous) {\n    previous.single = true;\n    yield previous;\n  }\n}\nconst reduce = (file, blockstore, options) => {\n  async function reducer(leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0];\n      if (file.mtime !== undefined || file.mode !== undefined) {\n        let buffer = await blockstore.get(leaf.cid);\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        });\n        buffer = encode(prepare({ Data: leaf.unixfs.marshal() }));\n        leaf.cid = await persist(buffer, blockstore, {\n          ...options,\n          codec: dagPb,\n          hasher: options.hasher,\n          cidVersion: options.cidVersion\n        });\n        leaf.size = buffer.length;\n      }\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      };\n    }\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    });\n    const links = leaves.filter(leaf => {\n      if (leaf.cid.code === rawCodec.code && leaf.size) {\n        return true;\n      }\n      if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n        return true;\n      }\n      return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length);\n    }).map(leaf => {\n      if (leaf.cid.code === rawCodec.code) {\n        f.addBlockSize(leaf.size);\n        return {\n          Name: '',\n          Tsize: leaf.size,\n          Hash: leaf.cid\n        };\n      }\n      if (!leaf.unixfs || !leaf.unixfs.data) {\n        f.addBlockSize(leaf.unixfs && leaf.unixfs.fileSize() || 0);\n      } else {\n        f.addBlockSize(leaf.unixfs.data.length);\n      }\n      return {\n        Name: '',\n        Tsize: leaf.size,\n        Hash: leaf.cid\n      };\n    });\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, blockstore, options);\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    };\n  }\n  return reducer;\n};\nfunction fileBuilder(file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy];\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${ options.strategy }`), 'ERR_BAD_STRATEGY');\n  }\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options);\n}\nexport default fileBuilder;","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","import BufferList from 'bl/BufferList.js';\nimport { create } from 'rabin-wasm';\nimport errcode from 'err-code';\nasync function* rabinChunker(source, options) {\n  let min, max, avg;\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize;\n    min = options.minChunkSize;\n    max = options.maxChunkSize;\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE');\n  } else {\n    avg = options.avgChunkSize;\n    min = avg / 3;\n    max = avg + avg / 2;\n  }\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE');\n  }\n  if (max < min) {\n    max = min;\n  }\n  if (avg < min) {\n    avg = min;\n  }\n  const sizepow = Math.floor(Math.log2(avg));\n  for await (const chunk of rabin(source, {\n      min: min,\n      max: max,\n      bits: sizepow,\n      window: options.window,\n      polynomial: options.polynomial\n    })) {\n    yield chunk;\n  }\n}\nexport default rabinChunker;\nasync function* rabin(source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window);\n  const buffers = new BufferList();\n  for await (const chunk of source) {\n    buffers.append(chunk);\n    const sizes = r.fingerprint(chunk);\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i];\n      const buf = buffers.slice(0, size);\n      buffers.consume(size);\n      yield buf;\n    }\n  }\n  if (buffers.length) {\n    yield buffers.slice(0);\n  }\n}","import BufferList from 'bl/BufferList.js';\nasync function* fixedSizeChunker(source, options) {\n  let bl = new BufferList();\n  let currentLength = 0;\n  let emitted = false;\n  const maxChunkSize = options.maxChunkSize;\n  for await (const buffer of source) {\n    bl.append(buffer);\n    currentLength += buffer.length;\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize);\n      emitted = true;\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList();\n        currentLength = 0;\n      } else {\n        const newBl = new BufferList();\n        newBl.append(bl.shallowSlice(maxChunkSize));\n        bl = newBl;\n        currentLength -= maxChunkSize;\n      }\n    }\n  }\n  if (!emitted || currentLength) {\n    yield bl.slice(0, currentLength);\n  }\n}\nexport default fixedSizeChunker;","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return globalThis.Buffer.alloc(size);\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return globalThis.Buffer.allocUnsafe(size);\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(string, 'utf8');\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nasync function* validateChunks(source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString());\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content);\n    } else if (content instanceof Uint8Array) {\n      yield content;\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n    }\n  }\n}\nexport default validateChunks;","import dirBuilder from './dir.js';\nimport fileBuilder from './file/index.js';\nimport errCode from 'err-code';\nimport rabin from '../chunker/rabin.js';\nimport fixedSize from '../chunker/fixed-size.js';\nimport validateChunks from './validate-chunks.js';\nfunction isIterable(thing) {\n  return Symbol.iterator in thing;\n}\nfunction isAsyncIterable(thing) {\n  return Symbol.asyncIterator in thing;\n}\nfunction contentAsAsyncIterable(content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return async function* () {\n        yield content;\n      }();\n    } else if (isIterable(content)) {\n      return async function* () {\n        yield* content;\n      }();\n    } else if (isAsyncIterable(content)) {\n      return content;\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n  }\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT');\n}\nasync function* dagBuilder(source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true;\n      }\n      entry.path = entry.path.split('/').filter(path => path && path !== '.').join('/');\n    }\n    if (entry.content) {\n      let chunker;\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker;\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin;\n      } else {\n        chunker = fixedSize;\n      }\n      let chunkValidator;\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator;\n      } else {\n        chunkValidator = validateChunks;\n      }\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      };\n      yield () => fileBuilder(file, blockstore, options);\n    } else if (entry.path) {\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      };\n      yield () => dirBuilder(dir, blockstore, options);\n    } else {\n      throw new Error('Import candidate must have content or path or both');\n    }\n  }\n}\nexport default dagBuilder;","class Dir {\n  constructor(props, options) {\n    this.options = options || {};\n    this.root = props.root;\n    this.dir = props.dir;\n    this.path = props.path;\n    this.dirty = props.dirty;\n    this.flat = props.flat;\n    this.parent = props.parent;\n    this.parentKey = props.parentKey;\n    this.unixfs = props.unixfs;\n    this.mode = props.mode;\n    this.mtime = props.mtime;\n    this.cid = undefined;\n    this.size = undefined;\n  }\n  async put(name, value) {\n  }\n  get(name) {\n    return Promise.resolve(this);\n  }\n  async *eachChildSeries() {\n  }\n  async *flush(blockstore) {\n  }\n}\nexport default Dir;","import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nclass DirFlat extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._children = {};\n  }\n  async put(name, value) {\n    this.cid = undefined;\n    this.size = undefined;\n    this._children[name] = value;\n  }\n  get(name) {\n    return Promise.resolve(this._children[name]);\n  }\n  childCount() {\n    return Object.keys(this._children).length;\n  }\n  directChildrenCount() {\n    return this.childCount();\n  }\n  onlyChild() {\n    return this._children[Object.keys(this._children)[0]];\n  }\n  async *eachChildSeries() {\n    const keys = Object.keys(this._children);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      yield {\n        key: key,\n        child: this._children[key]\n      };\n    }\n  }\n  async *flush(block) {\n    const children = Object.keys(this._children);\n    const links = [];\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]];\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry;\n          yield child;\n        }\n      }\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        });\n      }\n    }\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    });\n    const node = {\n      Data: unixfs.marshal(),\n      Links: links\n    };\n    const buffer = encode(prepare(node));\n    const cid = await persist(buffer, block, this.options);\n    const size = buffer.length + node.Links.reduce((acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize), 0);\n    this.cid = cid;\n    this.size = size;\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    };\n  }\n}\nexport default DirFlat;","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","'use strict'\n\n// @ts-ignore\nconst SparseArray = require('sparse-array')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('./consumable-hash').InfiniteHash} InfiniteHash\n * @typedef {import('../').UserBucketOptions} UserBucketOptions\n */\n\n/**\n * @template V\n * @typedef {object} BucketChild<V>\n * @property {string} key\n * @property {V} value\n * @property {InfiniteHash} hash\n */\n\n/**\n * @template B\n *\n * @typedef {object} SA<B>\n * @property {number} length\n * @property {() => B[]} compactArray\n * @property {(i: number) => B} get\n * @property {(i: number, value: B) => void} set\n * @property {<A> (fn: (acc: A, curr: B, index: number) => A, initial: A) => B} reduce\n * @property {(fn: (item: B) => boolean) => B | undefined} find\n * @property {() => number[]} bitField\n * @property {(i: number) => void} unset\n */\n\n/**\n * @template T\n *\n * @typedef {object} BucketPosition<T>\n * @property {Bucket<T>} bucket\n * @property {number} pos\n * @property {InfiniteHash} hash\n * @property {BucketChild<T>} [existingChild]\n */\n\n/**\n * @typedef {object} BucketOptions\n * @property {number} bits\n * @property {(value: Uint8Array | InfiniteHash) => InfiniteHash} hash\n */\n\n/**\n * @template T\n */\nclass Bucket {\n  /**\n   * @param {BucketOptions} options\n   * @param {Bucket<T>} [parent]\n   * @param {number} [posAtParent=0]\n   */\n  constructor (options, parent, posAtParent = 0) {\n    this._options = options\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    /** @type {SA<Bucket<T> | BucketChild<T>>} */\n    this._children = new SparseArray()\n\n    /** @type {string | null} */\n    this.key = null\n  }\n\n  /**\n   * @param {string} key\n   * @param {T} value\n   */\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  /**\n   * @param {string} key\n   */\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  leafCount () {\n    const children = this._children.compactArray()\n\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  /**\n   * @returns {Iterable<BucketChild<T>>}\n   */\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield * child.eachLeafSeries()\n      } else {\n        yield child\n      }\n    }\n\n    // this is necessary because tsc requires a @return annotation as it\n    // can't derive a return type due to the recursion, and eslint requires\n    // a return statement when there is a @return annotation\n    return []\n  }\n\n  /**\n   * @param {(value: BucketChild<T>, index: number) => T} map\n   * @param {(reduced: any) => any} reduce\n   */\n  serialize (map, reduce) {\n    /** @type {T[]} */\n    const acc = []\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, acc))\n  }\n\n  /**\n   * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n   * @param {(reduced: any) => Promise<any>} asyncReduce\n   */\n  asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  /**\n   * @param {string} key\n   * @returns {Promise<BucketChild<T> | undefined>}\n   */\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined\n    }\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findPlace (key) {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n\n    if (place.existingChild && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash)\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  /**\n   * @param {BucketPosition<T>} place\n   * @param {string} key\n   * @param {T} value\n   */\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  /**\n   * @param {number} pos\n   * @param {Bucket<T> | BucketChild<T>} object\n   */\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  /**\n   * @param {number} pos\n   */\n  _delAt (pos) {\n    if (pos === -1) {\n      throw new Error('Invalid position')\n    }\n\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (onlyChild && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash,\n            bucket: this._parent\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @returns {BucketChild<T> | Bucket<T> | undefined}\n   */\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\n/**\n * @param {any} o\n */\nfunction exists (o) {\n  return Boolean(o)\n}\n\n/**\n *\n * @param {*} node\n * @param {number} index\n */\nfunction mapNode (node, index) {\n  return node.key\n}\n\n/**\n * @param {*} nodes\n */\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\n/**\n * @template T\n *\n * @param {Bucket<T>} bucket\n * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n * @param {(reduced: any) => Promise<any>} asyncReduce\n */\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n  }\n\n  return asyncReduce(output)\n}\n\nmodule.exports = Bucket\n","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","import { allocUnsafe } from './alloc.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return output;\n}","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\n/**\n * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n */\nfunction wrapHash (hashFn) {\n  /**\n   * @param {InfiniteHash | Uint8Array} value\n   */\n  function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nclass InfiniteHash {\n  /**\n   *\n   * @param {Uint8Array} value\n   * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n   */\n  constructor (value, hashFn) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n\n    /** @type {ConsumableBuffer[]} */\n    this._buffers = []\n  }\n\n  /**\n   * @param {number} bits\n   */\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n\nmodule.exports = wrapHash\nmodule.exports.InfiniteHash = InfiniteHash\n","'use strict'\n\nconst Bucket = require('./bucket')\nconst wrapHash = require('./consumable-hash')\n\n/**\n * @typedef {object} UserBucketOptions\n * @property {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n * @property {number} [bits=8]\n */\n\n/**\n * @param {UserBucketOptions} options\n */\nfunction createHAMT (options) {\n  if (!options || !options.hashFn) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits || 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket(bucketOptions)\n}\n\nmodule.exports = {\n  createHAMT,\n  Bucket\n}\n","import {\n  encode,\n  prepare\n} from '@ipld/dag-pb';\nimport { UnixFS } from 'ipfs-unixfs';\nimport Dir from './dir.js';\nimport persist from './utils/persist.js';\nimport {\n  createHAMT,\n  Bucket\n} from 'hamt-sharding';\nclass DirSharded extends Dir {\n  constructor(props, options) {\n    super(props, options);\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    });\n  }\n  async put(name, value) {\n    await this._bucket.put(name, value);\n  }\n  get(name) {\n    return this._bucket.get(name);\n  }\n  childCount() {\n    return this._bucket.leafCount();\n  }\n  directChildrenCount() {\n    return this._bucket.childrenCount();\n  }\n  onlyChild() {\n    return this._bucket.onlyChild();\n  }\n  async *eachChildSeries() {\n    for await (const {key, value} of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      };\n    }\n  }\n  async *flush(blockstore) {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      };\n    }\n  }\n}\nexport default DirSharded;\nasync function* flush(bucket, blockstore, shardRoot, options) {\n  const children = bucket._children;\n  const links = [];\n  let childrenSize = 0;\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i);\n    if (!child) {\n      continue;\n    }\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0');\n    if (child instanceof Bucket) {\n      let shard;\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard;\n      }\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found');\n      }\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      });\n      childrenSize += shard.size;\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value;\n      let flushedDir;\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry;\n        yield flushedDir;\n      }\n      const label = labelPrefix + child.key;\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      });\n      childrenSize += flushedDir.size;\n    } else {\n      const value = child.value;\n      if (!value.cid) {\n        continue;\n      }\n      const label = labelPrefix + child.key;\n      const size = value.size;\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      });\n      childrenSize += size;\n    }\n  }\n  const data = Uint8Array.from(children.bitField().reverse());\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  });\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  };\n  const buffer = encode(prepare(node));\n  const cid = await persist(buffer, blockstore, options);\n  const size = buffer.length + childrenSize;\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  };\n}","import DirSharded from './dir-sharded.js';\nimport DirFlat from './dir-flat.js';\nasync function flatToShard(child, dir, threshold, options) {\n  let newDir = dir;\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options);\n  }\n  const parent = newDir.parent;\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir;\n      }\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found');\n      }\n      await parent.put(newDir.parentKey, newDir);\n    }\n    return flatToShard(newDir, parent, threshold, options);\n  }\n  return newDir;\n}\nasync function convertToShard(oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options);\n  for await (const {key, child} of oldDir.eachChildSeries()) {\n    await newDir.put(key, child);\n  }\n  return newDir;\n}\nexport default flatToShard;","const toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nexport default toPathComponents;","import DirFlat from './dir-flat.js';\nimport flatToShard from './flat-to-shard.js';\nimport Dir from './dir.js';\nimport toPathComponents from './utils/to-path-components.js';\nasync function addToTree(elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '');\n  const lastIndex = pathElems.length - 1;\n  let parent = tree;\n  let currentPath = '';\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i];\n    currentPath += `${ currentPath ? '/' : '' }${ pathElem }`;\n    const last = i === lastIndex;\n    parent.dirty = true;\n    parent.cid = undefined;\n    parent.size = undefined;\n    if (last) {\n      await parent.put(pathElem, elem);\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options);\n    } else {\n      let dir = await parent.get(pathElem);\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options);\n      }\n      await parent.put(pathElem, dir);\n      parent = dir;\n    }\n  }\n  return tree;\n}\nasync function* flushAndYield(tree, blockstore) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree;\n    }\n    return;\n  }\n  yield* tree.flush(blockstore);\n}\nasync function* treeBuilder(source, block, options) {\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options);\n  for await (const entry of source) {\n    if (!entry) {\n      continue;\n    }\n    tree = await addToTree(entry, tree, options);\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry;\n    }\n  }\n  if (options.wrapWithDirectory) {\n    yield* flushAndYield(tree, block);\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue;\n      }\n      yield* flushAndYield(unwrapped.child, block);\n    }\n  }\n}\nexport default treeBuilder;","import parallelBatch from 'it-parallel-batch';\nimport defaultOptions from './options.js';\nimport dagBuilderFn from './dag-builder/index.js';\nimport treeBuilderFn from './tree-builder.js';\nexport async function* importer(source, blockstore, options = {}) {\n  const opts = defaultOptions(options);\n  let dagBuilder;\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder;\n  } else {\n    dagBuilder = dagBuilderFn;\n  }\n  let treeBuilder;\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder;\n  } else {\n    treeBuilder = treeBuilderFn;\n  }\n  let candidates;\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    candidates = source;\n  } else {\n    candidates = [source];\n  }\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    };\n  }\n}","'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n","/* eslint-env browser */\n\n'use strict'\n\nconst browserReadableStreamToIt = require('browser-readablestream-to-it')\n\n/**\n * @param {Blob} blob\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction blobToIt (blob) {\n  if (typeof blob.stream === 'function') {\n    // @ts-ignore missing some properties\n    return browserReadableStreamToIt(blob.stream())\n  }\n\n  // firefox < 69 does not support blob.stream()\n  // @ts-ignore - response.body is optional, but in practice it's a stream.\n  return browserReadableStreamToIt(new Response(blob).body)\n}\n\nmodule.exports = blobToIt\n","'use strict'\n\n/**\n * @template T\n * @typedef {Object} Peek\n * @property {() => IteratorResult<T, void>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} AsyncPeek\n * @property {() => Promise<IteratorResult<T, void>>} peek\n */\n\n/**\n * @template T\n * @typedef {Object} Push\n * @property {(value:T) => void} push\n */\n\n/**\n * @template T\n * @typedef {Iterable<T> & Peek<T> & Push<T> & Iterator<T>} Peekable<T>\n */\n\n/**\n * @template T\n * @typedef {AsyncIterable<T> & AsyncPeek<T> & Push<T> & AsyncIterator<T>} AsyncPeekable<T>\n */\n\n/**\n * @template {Iterable<any> | AsyncIterable<any>} I\n * @param {I} iterable\n * @returns {I extends Iterable<infer T>\n *  ? Peekable<T>\n *  : I extends AsyncIterable<infer T>\n *  ? AsyncPeekable<T>\n *  : never\n * }\n */\nfunction peekableIterator (iterable) {\n  // @ts-ignore\n  const [iterator, symbol] = iterable[Symbol.asyncIterator]\n    // @ts-ignore\n    ? [iterable[Symbol.asyncIterator](), Symbol.asyncIterator]\n    // @ts-ignore\n    : [iterable[Symbol.iterator](), Symbol.iterator]\n\n  /** @type {any[]} */\n  const queue = []\n\n  // @ts-ignore\n  return {\n    peek: () => {\n      return iterator.next()\n    },\n    push: (value) => {\n      queue.push(value)\n    },\n    next: () => {\n      if (queue.length) {\n        return {\n          done: false,\n          value: queue.shift()\n        }\n      }\n\n      return iterator.next()\n    },\n    [symbol] () {\n      return this\n    }\n  }\n}\n\nmodule.exports = peekableIterator\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","export function isBytes(obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nexport function isBlob(obj) {\n  return obj.constructor && (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') && typeof obj.stream === 'function';\n}\nexport function isFileObject(obj) {\n  return typeof obj === 'object' && (obj.path || obj.content);\n}\nexport const isReadableStream = value => value && typeof value.getReader === 'function';","import errCode from 'err-code';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport blobToIt from 'blob-to-it';\nimport itPeekable from 'it-peekable';\nimport all from 'it-all';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js';\nasync function* toAsyncIterable(thing) {\n  yield thing;\n}\nexport async function normaliseContent(input) {\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input));\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()));\n  }\n  if (isBlob(input)) {\n    return blobToIt(input);\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      return toAsyncIterable(new Uint8Array(0));\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)));\n    }\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes);\n    }\n  }\n  throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n}\nfunction toBytes(chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk;\n  }\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n  }\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk);\n  }\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk);\n  }\n  return uint8ArrayFromString(chunk.toString());\n}","import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateSingle(input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${ input }`), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent);\n    return;\n  }\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield { content: [] };\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent);\n      return;\n    }\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent);\n    return;\n  }\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}","import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateSingle(input, normaliseContent);\n}","import errCode from 'err-code';\nimport browserStreamToIt from 'browser-readablestream-to-it';\nimport itPeekable from 'it-peekable';\nimport map from 'it-map';\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js';\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs';\nexport async function* normaliseCandidateMultiple(input, normaliseContent) {\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input);\n  }\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input);\n    const {value, done} = await peekable.peek();\n    if (done) {\n      yield* [];\n      return;\n    }\n    peekable.push(value);\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n    }\n    if (value._readableState) {\n      yield* map(peekable, value => toFileObject({ content: value }, normaliseContent));\n      return;\n    }\n    if (isBytes(value)) {\n      yield toFileObject({ content: peekable }, normaliseContent);\n      return;\n    }\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield* map(peekable, value => toFileObject(value, normaliseContent));\n      return;\n    }\n  }\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT');\n  }\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT');\n}\nasync function toFileObject(input, normaliseContent) {\n  const {path, mode, mtime, content} = input;\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  };\n  if (content) {\n    file.content = await normaliseContent(content);\n  } else if (!path) {\n    file.content = await normaliseContent(input);\n  }\n  return file;\n}","import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js';\nexport function normaliseInput(input) {\n  return normaliseCandidateMultiple(input, normaliseContent);\n}","import { normaliseInput as normaliseInputSingle } from 'ipfs-core-utils/files/normalise-input-single';\nimport { normaliseInput as normaliseInputMultiple } from 'ipfs-core-utils/files/normalise-input-multiple';\nfunction isBytes(obj) {\n    return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer;\n}\nfunction isBlob(obj) {\n    return Boolean(obj.constructor) &&\n        (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n        typeof obj.stream === 'function';\n}\nfunction isSingle(input) {\n    return typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || '_readableState' in input;\n}\n/**\n * Get a single or multiple normaliser depending on the input.\n */\nexport function getNormaliser(input) {\n    if (isSingle(input)) {\n        return normaliseInputSingle(input);\n    }\n    else {\n        return normaliseInputMultiple(input);\n    }\n}\n","import errCode from 'err-code';\nexport function notFoundError(err) {\n  err = err || new Error('Not Found');\n  return errCode(err, 'ERR_NOT_FOUND');\n}\nexport function abortedError(err) {\n  err = err || new Error('Aborted');\n  return errCode(err, 'ERR_ABORTED');\n}","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","'use strict'\n\n/**\n * Stop iteration after n items have been received.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} limit\n * @returns {AsyncIterable<T>}\n */\nconst take = async function * (source, limit) {\n  let items = 0\n\n  if (limit < 1) {\n    return\n  }\n\n  for await (const entry of source) {\n    yield entry\n\n    items++\n\n    if (items === limit) {\n      return\n    }\n  }\n}\n\nmodule.exports = take\n","import drain from 'it-drain';\nimport filter from 'it-filter';\nimport take from 'it-take';\nimport all from 'it-all';\nconst sortAll = (iterable, sorter) => {\n  return async function* () {\n    const values = await all(iterable);\n    yield* values.sort(sorter);\n  }();\n};\nexport class BaseBlockstore {\n  open() {\n    return Promise.reject(new Error('.open is not implemented'));\n  }\n  close() {\n    return Promise.reject(new Error('.close is not implemented'));\n  }\n  put(key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'));\n  }\n  get(key, options) {\n    return Promise.reject(new Error('.get is not implemented'));\n  }\n  has(key, options) {\n    return Promise.reject(new Error('.has is not implemented'));\n  }\n  delete(key, options) {\n    return Promise.reject(new Error('.delete is not implemented'));\n  }\n  async *putMany(source, options = {}) {\n    for await (const {key, value} of source) {\n      await this.put(key, value, options);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  async *getMany(source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options);\n    }\n  }\n  async *deleteMany(source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options);\n      yield key;\n    }\n  }\n  batch() {\n    let puts = [];\n    let dels = [];\n    return {\n      put(key, value) {\n        puts.push({\n          key,\n          value\n        });\n      },\n      delete(key) {\n        dels.push(key);\n      },\n      commit: async options => {\n        await drain(this.putMany(puts, options));\n        puts = [];\n        await drain(this.deleteMany(dels, options));\n        dels = [];\n      }\n    };\n  }\n  async *_all(q, options) {\n    throw new Error('._all is not implemented');\n  }\n  async *_allKeys(q, options) {\n    throw new Error('._allKeys is not implemented');\n  }\n  query(q, options) {\n    let it = this._all(q, options);\n    if (q.prefix != null) {\n      it = filter(it, e => e.key.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= (q.offset || 0));\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n  queryKeys(q, options) {\n    let it = this._allKeys(q, options);\n    if (q.prefix != null) {\n      it = filter(it, cid => cid.toString().startsWith(q.prefix || ''));\n    }\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >= q.offset);\n    }\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n    return it;\n  }\n}","import { CID } from 'multiformats';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class MemoryBlockStore extends BaseBlockstore {\n    constructor() {\n        super();\n        this.store = new Map();\n    }\n    async *blocks() {\n        for (const [cidStr, bytes] of this.store.entries()) {\n            yield { cid: CID.parse(cidStr), bytes };\n        }\n    }\n    put(cid, bytes) {\n        this.store.set(cid.toString(), bytes);\n        return Promise.resolve();\n    }\n    get(cid) {\n        const bytes = this.store.get(cid.toString());\n        if (!bytes) {\n            throw new Error(`block with cid ${cid.toString()} no found`);\n        }\n        return Promise.resolve(bytes);\n    }\n    has(cid) {\n        return Promise.resolve(this.store.has(cid.toString()));\n    }\n    close() {\n        this.store.clear();\n        return Promise.resolve();\n    }\n}\n","import { sha256 } from 'multiformats/hashes/sha2';\nexport const unixfsImporterOptionsDefault = {\n    cidVersion: 1,\n    chunker: 'fixed',\n    maxChunkSize: 262144,\n    hasher: sha256,\n    rawLeaves: true,\n    wrapWithDirectory: true,\n    maxChildrenPerNode: 174\n};\n","import last from 'it-last';\nimport pipe from 'it-pipe';\nimport { CarWriter } from '@ipld/car';\nimport { importer } from 'ipfs-unixfs-importer';\nimport { getNormaliser } from \"./utils/normalise-input.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\nimport { unixfsImporterOptionsDefault } from \"./constants.js\";\nexport async function pack({ input, blockstore: userBlockstore, hasher, maxChunkSize, maxChildrenPerNode, wrapWithDirectory, rawLeaves }) {\n    if (!input || (Array.isArray(input) && !input.length)) {\n        throw new Error('missing input file(s)');\n    }\n    const blockstore = userBlockstore ? userBlockstore : new MemoryBlockStore();\n    // Consume the source\n    const rootEntry = await last(pipe(getNormaliser(input), (source) => importer(source, blockstore, {\n        ...unixfsImporterOptionsDefault,\n        hasher: hasher || unixfsImporterOptionsDefault.hasher,\n        maxChunkSize: maxChunkSize || unixfsImporterOptionsDefault.maxChunkSize,\n        maxChildrenPerNode: maxChildrenPerNode || unixfsImporterOptionsDefault.maxChildrenPerNode,\n        wrapWithDirectory: wrapWithDirectory === false ? false : unixfsImporterOptionsDefault.wrapWithDirectory,\n        rawLeaves: rawLeaves == null ? unixfsImporterOptionsDefault.rawLeaves : rawLeaves\n    })));\n    if (!rootEntry || !rootEntry.cid) {\n        throw new Error('given input could not be parsed correctly');\n    }\n    const root = rootEntry.cid;\n    const { writer, out: carOut } = await CarWriter.create([root]);\n    const carOutIter = carOut[Symbol.asyncIterator]();\n    let writingPromise;\n    const writeAll = async () => {\n        for await (const block of blockstore.blocks()) {\n            // `await` will block until all bytes in `carOut` are consumed by the user\n            // so we have backpressure here\n            await writer.put(block);\n        }\n        await writer.close();\n        if (!userBlockstore) {\n            await blockstore.close();\n        }\n    };\n    const out = {\n        [Symbol.asyncIterator]() {\n            if (writingPromise != null) {\n                throw new Error('Multiple iterator not supported');\n            }\n            // don't start writing until the user starts consuming the iterator\n            writingPromise = writeAll();\n            return {\n                async next() {\n                    const result = await carOutIter.next();\n                    if (result.done) {\n                        await writingPromise; // any errors will propagate from here\n                    }\n                    return result;\n                }\n            };\n        }\n    };\n    return { root, out };\n}\n","const MAX_HEADER_LENGTH = 2000\nconst THROW_ON_MAX_HEADER_LENGTH_EXCEEDED = false\n\nfunction hasRel (x) {\n  return x && x.rel\n}\n\nfunction intoRels (acc, x) {\n  function splitRel (rel) {\n    acc[rel] = Object.assign({}, x, { rel: rel })\n  }\n\n  x.rel.split(/\\s+/).forEach(splitRel)\n\n  return acc\n}\n\nfunction createObjects (acc, p) {\n  // rel=\"next\" => 1: rel 2: next\n  const m = p.match(/\\s*(.+)\\s*=\\s*\"?([^\"]+)\"?/)\n  if (m) acc[m[1]] = m[2]\n  return acc\n}\n\nfunction parseLink (link) {\n  try {\n    const m = link.match(/<?([^>]*)>(.*)/)\n    const linkUrl = m[1]\n    const parts = m[2].split(';')\n    const qry = {}\n    // The origin is unused but it's required to parse relative URLs\n    const url = new URL(linkUrl, 'https://example.com')\n\n    for (const [key, value] of url.searchParams) {\n      qry[key] = value\n    }\n\n    parts.shift()\n\n    let info = parts.reduce(createObjects, {})\n    info = Object.assign({}, qry, info)\n    info.url = linkUrl\n    return info\n  } catch {\n    return null\n  }\n}\n\nfunction checkHeader (linkHeader, options) {\n  if (!linkHeader) return false\n\n  options = options || {}\n  const maxHeaderLength = options.maxHeaderLength || MAX_HEADER_LENGTH\n  const throwOnMaxHeaderLengthExceeded = options.throwOnMaxHeaderLengthExceeded || THROW_ON_MAX_HEADER_LENGTH_EXCEEDED\n\n  if (linkHeader.length > maxHeaderLength) {\n    if (throwOnMaxHeaderLengthExceeded) {\n      throw new Error('Input string too long, it should be under ' + maxHeaderLength + ' characters.')\n    } else {\n      return false\n    }\n  }\n  return true\n}\n\nfunction parseLinkHeader (linkHeader, options) {\n  if (!checkHeader(linkHeader, options)) return null\n\n  return linkHeader.split(/,\\s*</)\n    .map(parseLink)\n    .filter(hasRel)\n    .reduce(intoRels, {})\n}\n\nexport { parseLinkHeader }\n","import {\n  Bucket,\n  createHAMT\n} from 'hamt-sharding';\nimport { decode } from '@ipld/dag-pb';\nimport { murmur3128 } from '@multiformats/murmur3';\nconst hashFn = async function (buf) {\n  return (await murmur3128.encode(buf)).slice(0, 8).reverse();\n};\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(links.map(link => {\n    if (link.Name == null) {\n      throw new Error('Unexpected Link without a Name');\n    }\n    if (link.Name.length === 2) {\n      const pos = parseInt(link.Name, 16);\n      return bucket._putObjectAt(pos, new Bucket({\n        hash: rootBucket._options.hash,\n        bits: rootBucket._options.bits\n      }, bucket, pos));\n    }\n    return rootBucket.put(link.Name.substring(2), true);\n  }));\n};\nconst toPrefix = position => {\n  return position.toString(16).toUpperCase().padStart(2, '0').substring(0, 2);\n};\nconst toBucketPath = position => {\n  let bucket = position.bucket;\n  const path = [];\n  while (bucket._parent) {\n    path.push(bucket);\n    bucket = bucket._parent;\n  }\n  path.push(bucket);\n  return path.reverse();\n};\nconst findShardCid = async (node, name, blockstore, context, options) => {\n  if (!context) {\n    const rootBucket = createHAMT({ hashFn });\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    };\n  }\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket);\n  const position = await context.rootBucket._findNewBucketAndPos(name);\n  let prefix = toPrefix(position.pos);\n  const bucketPath = toBucketPath(position);\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth];\n    prefix = toPrefix(context.lastBucket._posAtParent);\n  }\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false;\n    }\n    const entryPrefix = link.Name.substring(0, 2);\n    const entryName = link.Name.substring(2);\n    if (entryPrefix !== prefix) {\n      return false;\n    }\n    if (entryName && entryName !== name) {\n      return false;\n    }\n    return true;\n  });\n  if (!link) {\n    return null;\n  }\n  if (link.Name != null && link.Name.substring(2) === name) {\n    return link.Hash;\n  }\n  context.hamtDepth++;\n  const block = await blockstore.get(link.Hash, options);\n  node = decode(block);\n  return findShardCid(node, name, blockstore, context, options);\n};\nexport default findShardCid;","function extractDataFromBlock(block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length;\n  const blockEnd = blockStart + blockLength;\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    return new Uint8Array(0);\n  }\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    block = block.slice(0, requestedEnd - blockStart);\n  }\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    block = block.slice(requestedStart - blockStart);\n  }\n  return block;\n}\nexport default extractDataFromBlock;","import errCode from 'err-code';\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0;\n  }\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS');\n  }\n  if (!length && length !== 0) {\n    length = size - offset;\n  }\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS');\n  }\n  if (offset + length > size) {\n    length = size - offset;\n  }\n  return {\n    offset,\n    length\n  };\n};\nexport default validateOffsetAndLength;","import extractDataFromBlock from '../../../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js';\nimport { UnixFS } from 'ipfs-unixfs';\nimport errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nasync function* emitBytes(blockstore, node, start, end, streamPosition = 0, options) {\n  if (node instanceof Uint8Array) {\n    const buf = extractDataFromBlock(node, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += buf.length;\n    return streamPosition;\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  let file;\n  try {\n    file = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (file.data && file.data.length) {\n    const buf = extractDataFromBlock(file.data, streamPosition, start, end);\n    if (buf.length) {\n      yield buf;\n    }\n    streamPosition += file.data.length;\n  }\n  let childStart = streamPosition;\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i];\n    const childEnd = streamPosition + file.blockSizes[i];\n    if (start >= childStart && start < childEnd || end > childStart && end <= childEnd || start < childStart && end > childEnd) {\n      const block = await blockstore.get(childLink.Hash, { signal: options.signal });\n      let child;\n      switch (childLink.Hash.code) {\n      case dagPb.code:\n        child = await dagPb.decode(block);\n        break;\n      case raw.code:\n        child = block;\n        break;\n      case dagCbor.code:\n        child = await dagCbor.decode(block);\n        break;\n      default:\n        throw Error(`Unsupported codec: ${ childLink.Hash.code }`);\n      }\n      for await (const buf of emitBytes(blockstore, child, start, end, streamPosition, options)) {\n        streamPosition += buf.length;\n        yield buf;\n      }\n    }\n    streamPosition = childEnd;\n    childStart = childEnd + 1;\n  }\n}\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldFileContent(options = {}) {\n    const fileSize = unixfs.fileSize();\n    if (fileSize === undefined) {\n      throw new Error('File was a directory');\n    }\n    const {offset, length} = validateOffsetAndLength(fileSize, options.offset, options.length);\n    const start = offset;\n    const end = offset + length;\n    return emitBytes(blockstore, node, start, end, 0, options);\n  }\n  return yieldFileContent;\n};\nexport default fileContent;","const directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  async function* yieldDirectoryContent(options = {}) {\n    const offset = options.offset || 0;\n    const length = options.length || node.Links.length;\n    const links = node.Links.slice(offset, length);\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${ path }/${ link.Name || '' }`, [], depth + 1, blockstore, options);\n      if (result.entry) {\n        yield result.entry;\n      }\n    }\n  }\n  return yieldDirectoryContent;\n};\nexport default directoryContent;","import { decode } from '@ipld/dag-pb';\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  function yieldHamtDirectoryContent(options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options);\n  }\n  return yieldHamtDirectoryContent;\n};\nasync function* listDirectory(node, path, resolve, depth, blockstore, options) {\n  const links = node.Links;\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null;\n    if (name) {\n      const result = await resolve(link.Hash, name, `${ path }/${ name }`, [], depth + 1, blockstore, options);\n      yield result.entry;\n    } else {\n      const block = await blockstore.get(link.Hash);\n      node = decode(block);\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file;\n      }\n    }\n  }\n}\nexport default hamtShardedDirectoryContent;","import errCode from 'err-code';\nimport { UnixFS } from 'ipfs-unixfs';\nimport findShardCid from '../../utils/find-cid-in-shard.js';\nimport { decode } from '@ipld/dag-pb';\nimport contentFile from './content/file.js';\nimport contentDirectory from './content/directory.js';\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js';\nconst findLinkCid = (node, name) => {\n  const link = node.Links.find(link => link.Name === name);\n  return link && link.Hash;\n};\nconst contentExporters = {\n  raw: contentFile,\n  file: contentFile,\n  directory: contentDirectory,\n  'hamt-sharded-directory': contentHamtShardedDirectory,\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => [];\n  }\n};\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options);\n  const node = decode(block);\n  let unixfs;\n  let next;\n  if (!name) {\n    name = cid.toString();\n  }\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS');\n  }\n  try {\n    unixfs = UnixFS.unmarshal(node.Data);\n  } catch (err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS');\n  }\n  if (!path) {\n    path = name;\n  }\n  if (toResolve.length) {\n    let linkCid;\n    if (unixfs && unixfs.type === 'hamt-sharded-directory') {\n      linkCid = await findShardCid(node, toResolve[0], blockstore);\n    } else {\n      linkCid = findLinkCid(node, toResolve[0]);\n    }\n    if (!linkCid) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND');\n    }\n    const nextName = toResolve.shift();\n    const nextPath = `${ path }/${ nextName }`;\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName || '',\n      path: nextPath\n    };\n  }\n  return {\n    entry: {\n      type: unixfs.isDirectory() ? 'directory' : 'file',\n      name,\n      path,\n      cid,\n      content: contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore),\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  };\n};\nexport default unixFsResolver;","import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const block = await blockstore.get(cid, options);\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  };\n};\nexport default resolve;","import { CID } from 'multiformats/cid';\nimport errCode from 'err-code';\nimport * as dagCbor from '@ipld/dag-cbor';\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid);\n  const object = dagCbor.decode(block);\n  let subObject = object;\n  let subPath = path;\n  while (toResolve.length) {\n    const prop = toResolve[0];\n    if (prop in subObject) {\n      toResolve.shift();\n      subPath = `${ subPath }/${ prop }`;\n      const subObjectCid = CID.asCID(subObject[prop]);\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function* () {\n              yield object;\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        };\n      }\n      subObject = subObject[prop];\n    } else {\n      throw errCode(new Error(`No property named ${ prop } found in cbor node ${ cid }`), 'ERR_NO_PROP');\n    }\n  }\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function* () {\n        yield object;\n      }\n    }\n  };\n};\nexport default resolve;","import errCode from 'err-code';\nimport extractDataFromBlock from '../utils/extract-data-from-block.js';\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js';\nimport * as mh from 'multiformats/hashes/digest';\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const buf = await mh.decode(cid.multihash.bytes);\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  };\n};\nexport default resolve;","import errCode from 'err-code';\nimport * as dagPb from '@ipld/dag-pb';\nimport * as dagCbor from '@ipld/dag-cbor';\nimport * as raw from 'multiformats/codecs/raw';\nimport { identity } from 'multiformats/hashes/identity';\nimport dagPbResolver from './unixfs-v1/index.js';\nimport rawResolver from './raw.js';\nimport dagCborResolver from './dag-cbor.js';\nimport identifyResolver from './identity.js';\nconst resolvers = {\n  [dagPb.code]: dagPbResolver,\n  [raw.code]: rawResolver,\n  [dagCbor.code]: dagCborResolver,\n  [identity.code]: identifyResolver\n};\nfunction resolve(cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code];\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for code ${ cid.code }`), 'ERR_NO_RESOLVER');\n  }\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options);\n}\nexport default resolve;","import errCode from 'err-code';\nimport { CID } from 'multiformats/cid';\nimport resolve from './resolvers/index.js';\nimport last from 'it-last';\nconst toPathComponents = (path = '') => {\n  return (path.trim().match(/([^\\\\^/]|\\\\\\/)+/g) || []).filter(Boolean);\n};\nconst cidAndRest = path => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    };\n  }\n  const cid = CID.asCID(path);\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    };\n  }\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6);\n    }\n    const output = toPathComponents(path);\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    };\n  }\n  throw errCode(new Error(`Unknown path type ${ path }`), 'ERR_BAD_PATH');\n};\nexport async function* walkPath(path, blockstore, options = {}) {\n  let {cid, toResolve} = cidAndRest(path);\n  let name = cid.toString();\n  let entryPath = name;\n  const startingDepth = toResolve.length;\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options);\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n    }\n    if (result.entry) {\n      yield result.entry;\n    }\n    if (!result.next) {\n      return;\n    }\n    toResolve = result.next.toResolve;\n    cid = result.next.cid;\n    name = result.next.name;\n    entryPath = result.next.path;\n  }\n}\nexport async function exporter(path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options));\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${ path }`), 'ERR_NOT_FOUND');\n  }\n  return result;\n}\nexport async function* recursive(path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options);\n  if (!node) {\n    return;\n  }\n  yield node;\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child;\n    }\n  }\n  async function* recurse(node, options) {\n    for await (const file of node.content(options)) {\n      yield file;\n      if (file instanceof Uint8Array) {\n        continue;\n      }\n      if (file.type === 'directory') {\n        yield* recurse(file, options);\n      }\n    }\n  }\n}","export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}","import { equals } from 'uint8arrays/equals';\nimport { sha256 } from 'multiformats/hashes/sha2';\nimport { BaseBlockstore } from 'blockstore-core';\nexport class VerifyingGetOnlyBlockStore extends BaseBlockstore {\n    constructor(blockstore) {\n        super();\n        this.store = blockstore;\n    }\n    async get(cid) {\n        const res = await this.store.get(cid);\n        if (!res) {\n            throw new Error(`Incomplete CAR. Block missing for CID ${cid}`);\n        }\n        if (!isValid({ cid, bytes: res })) {\n            throw new Error(`Invalid CAR. Hash of block data does not match CID ${cid}`);\n        }\n        return res;\n    }\n    static fromBlockstore(b) {\n        return new VerifyingGetOnlyBlockStore(b);\n    }\n    static fromCarReader(cr) {\n        return new VerifyingGetOnlyBlockStore({\n            // Return bytes in the same fashion as a Blockstore implementation\n            get: async (cid) => {\n                const block = await cr.get(cid);\n                return block === null || block === void 0 ? void 0 : block.bytes;\n            }\n        });\n    }\n}\nasync function isValid({ cid, bytes }) {\n    const hash = await sha256.digest(bytes);\n    return equals(hash.digest, cid.multihash.digest);\n}\n","import toIterable from 'browser-readablestream-to-it';\nimport { CarBlockIterator } from '@ipld/car/iterator';\nimport { recursive as unixFsExporter } from 'ipfs-unixfs-exporter';\nimport { VerifyingGetOnlyBlockStore } from \"./utils/verifying-get-only-blockstore.js\";\nimport { MemoryBlockStore } from \"../blockstore/memory.js\";\n// Export unixfs entries from car file\nexport async function* unpack(carReader, roots) {\n    const verifyingBlockService = VerifyingGetOnlyBlockStore.fromCarReader(carReader);\n    if (!roots || roots.length === 0) {\n        roots = await carReader.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockService, { /* options */});\n    }\n}\nexport async function* unpackStream(readable, { roots, blockstore: userBlockstore } = {}) {\n    const carIterator = await CarBlockIterator.fromIterable(asAsyncIterable(readable));\n    const blockstore = userBlockstore || new MemoryBlockStore();\n    for await (const block of carIterator) {\n        await blockstore.put(block.cid, block.bytes);\n    }\n    const verifyingBlockStore = VerifyingGetOnlyBlockStore.fromBlockstore(blockstore);\n    if (!roots || roots.length === 0) {\n        roots = await carIterator.getRoots();\n    }\n    for (const root of roots) {\n        yield* unixFsExporter(root, verifyingBlockStore);\n    }\n}\n/**\n * Upgrade a ReadableStream to an AsyncIterable if it isn't already\n *\n * ReadableStream (e.g res.body) is asyncIterable in node, but not in chrome, yet.\n * see: https://bugs.chromium.org/p/chromium/issues/detail?id=929585\n */\nfunction asAsyncIterable(readable) {\n    // @ts-ignore how to convince tsc that we are checking the type here?\n    return Symbol.asyncIterator in readable ? readable : toIterable(readable);\n}\n","import {\n  bytes as binary,\n  CID\n} from './index.js';\nconst readonly = ({enumerable = true, configurable = false} = {}) => ({\n  enumerable,\n  configurable,\n  writable: false\n});\nconst links = function* (source, base) {\n  if (source == null)\n    return;\n  if (source instanceof Uint8Array)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          const cid = CID.asCID(element);\n          if (cid) {\n            yield [\n              elementPath.join('/'),\n              cid\n            ];\n          } else if (typeof element === 'object') {\n            yield* links(element, elementPath);\n          }\n        }\n      } else {\n        const cid = CID.asCID(value);\n        if (cid) {\n          yield [\n            path.join('/'),\n            cid\n          ];\n        } else {\n          yield* links(value, path);\n        }\n      }\n    }\n  }\n};\nconst tree = function* (source, base) {\n  if (source == null)\n    return;\n  for (const [key, value] of Object.entries(source)) {\n    const path = [\n      ...base,\n      key\n    ];\n    yield path.join('/');\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [\n            ...path,\n            index\n          ];\n          yield elementPath.join('/');\n          if (typeof element === 'object' && !CID.asCID(element)) {\n            yield* tree(element, elementPath);\n          }\n        }\n      } else {\n        yield* tree(value, path);\n      }\n    }\n  }\n};\nconst get = (source, path) => {\n  let node = source;\n  for (const [index, key] of path.entries()) {\n    node = node[key];\n    if (node == null) {\n      throw new Error(`Object has no property at ${ path.slice(0, index + 1).map(part => `[${ JSON.stringify(part) }]`).join('') }`);\n    }\n    const cid = CID.asCID(node);\n    if (cid) {\n      return {\n        value: cid,\n        remaining: path.slice(index + 1).join('/')\n      };\n    }\n  }\n  return { value: node };\n};\nclass Block {\n  constructor({cid, bytes, value}) {\n    if (!cid || !bytes || typeof value === 'undefined')\n      throw new Error('Missing required argument');\n    this.cid = cid;\n    this.bytes = bytes;\n    this.value = value;\n    this.asBlock = this;\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    });\n  }\n  links() {\n    return links(this.value, []);\n  }\n  tree() {\n    return tree(this.value, []);\n  }\n  get(path = '/') {\n    return get(this.value, path.split('/').filter(Boolean));\n  }\n}\nconst encode = async ({value, codec, hasher}) => {\n  if (typeof value === 'undefined')\n    throw new Error('Missing required argument \"value\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const bytes = codec.encode(value);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst decode = async ({bytes, codec, hasher}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!codec || !hasher)\n    throw new Error('Missing required argument: codec or hasher');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  const cid = CID.create(1, codec.code, hash);\n  return new Block({\n    value,\n    bytes,\n    cid\n  });\n};\nconst createUnsafe = ({\n  bytes,\n  cid,\n  value: maybeValue,\n  codec\n}) => {\n  const value = maybeValue !== undefined ? maybeValue : codec && codec.decode(bytes);\n  if (value === undefined)\n    throw new Error('Missing required argument, must either provide \"value\" or \"codec\"');\n  return new Block({\n    cid,\n    bytes,\n    value\n  });\n};\nconst create = async ({bytes, cid, hasher, codec}) => {\n  if (!bytes)\n    throw new Error('Missing required argument \"bytes\"');\n  if (!hasher)\n    throw new Error('Missing required argument \"hasher\"');\n  const value = codec.decode(bytes);\n  const hash = await hasher.digest(bytes);\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes');\n  }\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  });\n};\nexport {\n  encode,\n  decode,\n  create,\n  createUnsafe,\n  Block\n};","import * as cborg from 'cborg';\nimport { CID } from 'multiformats/cid';\nconst CID_CBOR_TAG = 42;\nfunction cidEncoder(obj) {\n  if (obj.asCID !== obj) {\n    return null;\n  }\n  const cid = CID.asCID(obj);\n  if (!cid) {\n    return null;\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1);\n  bytes.set(cid.bytes, 1);\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ];\n}\nfunction undefinedEncoder() {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded');\n}\nfunction numberEncoder(num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded');\n  }\n  return null;\n}\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n};\nfunction cidDecoder(bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00');\n  }\n  return CID.decode(bytes.subarray(1));\n}\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true,\n  strict: true,\n  useMaps: false,\n  tags: []\n};\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder;\nexport const name = 'dag-cbor';\nexport const code = 113;\nexport const encode = node => cborg.encode(node, encodeOptions);\nexport const decode = data => cborg.decode(data, decodeOptions);","import {\n  CarReader,\n  CarWriter\n} from '@ipld/car';\nimport { Block } from 'multiformats/block';\nimport * as raw from 'multiformats/codecs/raw';\nimport * as cbor from '@ipld/dag-cbor';\nimport * as pb from '@ipld/dag-pb';\nexport class TreewalkCarSplitter {\n  constructor(reader, targetSize, options = {}) {\n    if (typeof targetSize !== 'number' || targetSize <= 0) {\n      throw new Error('invalid target chunk size');\n    }\n    this._reader = reader;\n    this._targetSize = targetSize;\n    this._decoders = [\n      pb,\n      raw,\n      cbor,\n      ...options.decoders || []\n    ];\n  }\n  async *cars() {\n    const roots = await this._reader.getRoots();\n    if (roots.length !== 1)\n      throw new Error(`unexpected number of roots: ${ roots.length }`);\n    let channel;\n    for await (const val of this._cars(roots[0])) {\n      channel = val.channel;\n      if (val.out)\n        yield val.out;\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    channel.writer.close();\n    yield channel.out;\n  }\n  async _get(cid) {\n    const rawBlock = await this._reader.get(cid);\n    if (!rawBlock)\n      throw new Error(`missing block for ${ cid }`);\n    const {bytes} = rawBlock;\n    const decoder = this._decoders.find(d => d.code === cid.code);\n    if (!decoder)\n      throw new Error(`missing decoder for ${ cid.code }`);\n    return new Block({\n      cid,\n      bytes,\n      value: decoder.decode(bytes)\n    });\n  }\n  async *_cars(cid, parents = [], channel = undefined) {\n    const block = await this._get(cid);\n    channel = channel || Object.assign(CarWriter.create(cid), { size: 0 });\n    if (channel.size > 0 && channel.size + block.bytes.byteLength >= this._targetSize) {\n      channel.writer.close();\n      const {out} = channel;\n      channel = newCar(parents);\n      yield {\n        channel,\n        out\n      };\n    }\n    parents = parents.concat(block);\n    channel.size += block.bytes.byteLength;\n    channel.writer.put(block);\n    for (const [, cid] of block.links()) {\n      for await (const val of this._cars(cid, parents, channel)) {\n        channel = val.channel;\n        yield val;\n      }\n    }\n    if (!channel) {\n      throw new Error('missing CAR writer channel');\n    }\n    yield { channel };\n  }\n  static async fromIterable(iterable, targetSize, options) {\n    const reader = await CarReader.fromIterable(iterable);\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n  static async fromBlob(blob, targetSize, options) {\n    const buffer = await blob.arrayBuffer();\n    const reader = await CarReader.fromBytes(new Uint8Array(buffer));\n    return new TreewalkCarSplitter(reader, targetSize, options);\n  }\n}\nfunction newCar(parents) {\n  const ch = Object.assign(CarWriter.create(parents[0].cid), { size: parents.reduce((size, b) => size + b.bytes.byteLength, 0) });\n  for (const b of parents) {\n    ch.writer.put(b);\n  }\n  return ch;\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction throttledQueue(maxRequestsPerInterval, interval, evenlySpaced) {\n    if (evenlySpaced === void 0) { evenlySpaced = false; }\n    /**\n     * If all requests should be evenly spaced, adjust to suit.\n     */\n    if (evenlySpaced) {\n        interval = interval / maxRequestsPerInterval;\n        maxRequestsPerInterval = 1;\n    }\n    var queue = [];\n    var lastIntervalStart = 0;\n    var numRequestsPerInterval = 0;\n    var timeout;\n    /**\n     * Gets called at a set interval to remove items from the queue.\n     * This is a self-adjusting timer, since the browser's setTimeout is highly inaccurate.\n     */\n    var dequeue = function () {\n        var intervalEnd = lastIntervalStart + interval;\n        var now = Date.now();\n        /**\n         * Adjust the timer if it was called too early.\n         */\n        if (now < intervalEnd) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            timeout !== undefined && clearTimeout(timeout);\n            timeout = setTimeout(dequeue, intervalEnd - now);\n            return;\n        }\n        lastIntervalStart = now;\n        numRequestsPerInterval = 0;\n        for (var _i = 0, _a = queue.splice(0, maxRequestsPerInterval); _i < _a.length; _i++) {\n            var callback = _a[_i];\n            numRequestsPerInterval++;\n            void callback();\n        }\n        if (queue.length) {\n            timeout = setTimeout(dequeue, interval);\n        }\n        else {\n            timeout = undefined;\n        }\n    };\n    return function (fn) { return new Promise(function (resolve, reject) {\n        var callback = function () { return Promise.resolve().then(fn).then(resolve).catch(reject); };\n        var now = Date.now();\n        if (timeout === undefined && (now - lastIntervalStart) > interval) {\n            lastIntervalStart = now;\n            numRequestsPerInterval = 0;\n        }\n        if (numRequestsPerInterval++ < maxRequestsPerInterval) {\n            void callback();\n        }\n        else {\n            queue.push(callback);\n            if (timeout === undefined) {\n                timeout = setTimeout(dequeue, lastIntervalStart + interval - now);\n            }\n        }\n    }); };\n}\nmodule.exports = throttledQueue;\nexports.default = throttledQueue;\n//# sourceMappingURL=throttledQueue.js.map","// TODO: Use indexedDb\nimport { MemoryBlockStore } from 'ipfs-car/blockstore/memory'\n\nexport const fetch = globalThis.fetch\nexport const Request = globalThis.Request\nexport const Response = globalThis.Response\nexport const Blob = globalThis.Blob\nexport const File = globalThis.File\nexport const Blockstore = MemoryBlockStore\n","/**\n * A client library for the https://web3.storage/ service. It provides a convenient\n * interface for working with the [Raw HTTP API](https://web3.storage/#api-docs)\n * from a web browser or [Node.js](https://nodejs.org/) and comes bundled with\n * TS for out-of-the box type inference and better IntelliSense.\n *\n * @example\n * ```js\n * import { Web3Storage, File } from 'web3.storage'\n * const client = new Web3Storage({ token: API_TOKEN })\n *\n * const cid = await client.put([new File(['hello world'], 'hello.txt', { type: 'text/plain' })])\n * ```\n * @module\n */\nimport { transform } from 'streaming-iterables'\nimport pRetry, { AbortError } from 'p-retry'\nimport { pack } from 'ipfs-car/pack'\nimport { parseLinkHeader } from '@web3-storage/parse-link-header'\nimport { unpackStream } from 'ipfs-car/unpack'\nimport { TreewalkCarSplitter } from 'carbites/treewalk'\nimport { CarReader } from '@ipld/car'\nimport { filesFromPath, getFilesFromPath } from 'files-from-path'\nimport throttledQueue from 'throttled-queue'\nimport {\n  fetch as _fetch,\n  File,\n  Blob,\n  Blockstore\n} from './platform.js'\n\nconst MAX_PUT_RETRIES = 5\nconst MAX_CONCURRENT_UPLOADS = 3\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024 * 10 // chunk to ~10MB CARs\nconst MAX_BLOCK_SIZE = 1048576\nconst MAX_CHUNK_SIZE = 104857600\n// These match what is enforced server-side\nconst RATE_LIMIT_REQUESTS = 30\nconst RATE_LIMIT_PERIOD = 10 * 1000\n\n/** @typedef { import('./lib/interface.js').API } API */\n/** @typedef { import('./lib/interface.js').Status} Status */\n/** @typedef { import('./lib/interface.js').Upload} Upload */\n/** @typedef { import('./lib/interface.js').Service } Service */\n/** @typedef { import('./lib/interface.js').Web3File} Web3File */\n/** @typedef { import('./lib/interface.js').Filelike } Filelike */\n/** @typedef { import('./lib/interface.js').CIDString} CIDString */\n/** @typedef { import('./lib/interface.js').RequestOptions} RequestOptions */\n/** @typedef { import('./lib/interface.js').PutOptions} PutOptions */\n/** @typedef { import('./lib/interface.js').PutCarOptions} PutCarOptions */\n/** @typedef { import('./lib/interface.js').ListOptions} ListOptions */\n/** @typedef { import('./lib/interface.js').RateLimiter } RateLimiter */\n/** @typedef { import('./lib/interface.js').UnixFSEntry} UnixFSEntry */\n/** @typedef { import('./lib/interface.js').Web3Response} Web3Response */\n\n/**\n * Creates a rate limiter which limits at the same rate as is enforced\n * server-side, to allow the client to avoid exceeding the requests limit and\n * being blocked for 30 seconds.\n * @returns {RateLimiter}\n */\nexport function createRateLimiter () {\n  const throttle = throttledQueue(RATE_LIMIT_REQUESTS, RATE_LIMIT_PERIOD)\n  return () => throttle(() => {})\n}\n\n/**\n * Rate limiter used by static API if no rate limiter is passed. Note that each\n * instance of the Web3Storage class gets it's own limiter if none is passed.\n * This is because rate limits are enforced per API token.\n */\nconst globalRateLimiter = createRateLimiter()\n\n/**\n * @implements Service\n */\nclass Web3Storage {\n  /**\n   * Constructs a client bound to the given `options.token` and\n   * `options.endpoint`.\n   *\n   * @example\n   * ```js\n   * import { Web3Storage } from 'web3.storage'\n   * const client = new Web3Storage({ token: API_TOKEN })\n   * ```\n   *\n    @param {Service} options\n   */\n  constructor ({\n    token,\n    endpoint = new URL('https://api.web3.storage'),\n    rateLimiter,\n    fetch = _fetch\n  }) {\n    /**\n     * Authorization token.\n     *\n     * @readonly\n     */\n    this.token = token\n    /**\n     * Service API endpoint `URL`.\n     * @readonly\n     */\n    this.endpoint = endpoint\n    /**\n     * @readonly\n     */\n    this.rateLimiter = rateLimiter || createRateLimiter()\n    /**\n     * Optional custom fetch function. Defaults to global fetch in browsers or @web-std/fetch on node.\n     * @readonly\n     */\n    this.fetch = fetch\n  }\n\n  /**\n   * @hidden\n   * @param {string} token\n   * @returns {Record<string, string>}\n   */\n  static headers (token) {\n    if (!token) throw new Error('missing token')\n    return {\n      Authorization: `Bearer ${token}`,\n      'X-Client': 'web3.storage/js'\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async put ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, files, {\n    onRootCidReady,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    maxChunkSize = DEFAULT_CHUNK_SIZE,\n    wrapWithDirectory = true,\n    name,\n    signal\n  } = {}) {\n    if (maxChunkSize >= MAX_CHUNK_SIZE || maxChunkSize < MAX_BLOCK_SIZE) {\n      throw new Error('maximum chunk size must be less than 100MiB and greater than or equal to 1MB')\n    }\n    const blockstore = new Blockstore()\n    try {\n      const { out, root } = await pack({\n        input: Array.from(files).map(toImportCandidate),\n        blockstore,\n        wrapWithDirectory,\n        maxChunkSize: MAX_BLOCK_SIZE,\n        maxChildrenPerNode: 1024\n      })\n      onRootCidReady && onRootCidReady(root.toString())\n      const car = await CarReader.fromIterable(out)\n      return await Web3Storage.putCar({ endpoint, token, rateLimiter, fetch }, car, { onStoredChunk, maxRetries, maxChunkSize, name, signal })\n    } finally {\n      await blockstore.close()\n    }\n  }\n\n  /**\n   * @param {Service} service\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  static async putCar ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, car, {\n    name,\n    onStoredChunk,\n    maxRetries = MAX_PUT_RETRIES,\n    maxChunkSize = DEFAULT_CHUNK_SIZE,\n    decoders,\n    signal\n  } = {}) {\n    if (maxChunkSize >= MAX_CHUNK_SIZE || maxChunkSize < MAX_BLOCK_SIZE) {\n      throw new Error('maximum chunk size must be less than 100MiB and greater than or equal to 1MB')\n    }\n    const targetSize = maxChunkSize\n    const url = new URL('car', endpoint)\n    let headers = Web3Storage.headers(token)\n\n    if (name) {\n      headers = { ...headers, 'X-Name': encodeURIComponent(name) }\n    }\n\n    const roots = await car.getRoots()\n    if (roots[0] == null) {\n      throw new Error('missing root CID')\n    }\n    if (roots.length > 1) {\n      throw new Error('too many roots')\n    }\n\n    const carRoot = roots[0].toString()\n    const splitter = new TreewalkCarSplitter(car, targetSize, { decoders })\n\n    /**\n     * @param {AsyncIterable<Uint8Array>} car\n     * @returns {Promise<CIDString>}\n     */\n    const onCarChunk = async car => {\n      const carParts = []\n      for await (const part of car) {\n        carParts.push(part)\n      }\n\n      const carFile = new Blob(carParts, { type: 'application/vnd.ipld.car' })\n      const res = await pRetry(\n        async () => {\n          await rateLimiter()\n          /** @type {Response} */\n          let response\n          try {\n            response = await fetch(url.toString(), {\n              method: 'POST',\n              headers,\n              body: carFile,\n              signal\n            })\n          } catch (/** @type {any} */err) {\n            throw signal && signal.aborted ? new AbortError(err) : err\n          }\n          /* c8 ignore next 3 */\n          if (response.status === 429) {\n            throw new Error('rate limited')\n          }\n          const res = await response.json()\n          if (!response.ok) {\n            throw new Error(res.message)\n          }\n\n          if (res.cid !== carRoot) {\n            throw new Error(`root CID mismatch, expected: ${carRoot}, received: ${res.cid}`)\n          }\n          return res.cid\n        },\n        { retries: maxRetries }\n      )\n\n      onStoredChunk && onStoredChunk(carFile.size)\n      return res\n    }\n\n    const upload = transform(MAX_CONCURRENT_UPLOADS, onCarChunk)\n    for await (const _ of upload(splitter.cars())) {} // eslint-disable-line\n    return carRoot\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   * @returns {Promise<Web3Response | null>}\n   */\n  static async get ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, cid, options = {}) {\n    const url = new URL(`car/${cid}`, endpoint)\n    await rateLimiter()\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token),\n      signal: options.signal\n    })\n    /* c8 ignore next 3 */\n    if (res.status === 429) {\n      throw new Error('rate limited')\n    }\n    return toWeb3Response(res)\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   * @returns {Promise<CIDString>}\n   */\n  /* c8 ignore next 4 */\n  static async delete ({ endpoint, token, rateLimiter = globalRateLimiter }, cid, options = {}) {\n    console.log('Not deleting', cid, endpoint, token, rateLimiter, options)\n    throw Error('.delete not implemented yet')\n  }\n\n  /**\n   * @param {Service} service\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   * @returns {Promise<Status | undefined>}\n   */\n  static async status ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, cid, options = {}) {\n    const url = new URL(`status/${cid}`, endpoint)\n    await rateLimiter()\n    const res = await fetch(url.toString(), {\n      method: 'GET',\n      headers: Web3Storage.headers(token),\n      signal: options.signal\n    })\n    /* c8 ignore next 3 */\n    if (res.status === 429) {\n      throw new Error('rate limited')\n    }\n    if (res.status === 404) {\n      return undefined\n    }\n    if (!res.ok) {\n      throw new Error(res.statusText)\n    }\n    return res.json()\n  }\n\n  /**\n   * @param {Service} service\n   * @param {ListOptions} [opts]\n   * @returns {AsyncIterable<Upload>}\n   */\n  static async * list (service, { before = new Date().toISOString(), maxResults = Infinity, signal } = {}) {\n    /**\n     * @param {Service} service\n     * @param {{before: string, size: number}} opts\n     * @returns {Promise<Response>}\n     */\n    async function listPage ({ endpoint, token, rateLimiter = globalRateLimiter, fetch = _fetch }, { before, size }) {\n      const search = new URLSearchParams({ before, size: size.toString() })\n      const url = new URL(`user/uploads?${search}`, endpoint)\n      await rateLimiter()\n      return fetch(url.toString(), {\n        method: 'GET',\n        headers: {\n          ...Web3Storage.headers(token),\n          'Access-Control-Request-Headers': 'Link'\n        },\n        signal\n      })\n    }\n    let count = 0\n    const size = maxResults > 100 ? 100 : maxResults\n    for await (const res of paginator(listPage, service, { before, size })) {\n      if (!res.ok) {\n        /* c8 ignore next 3 */\n        if (res.status === 429) {\n          throw new Error('rate limited')\n        }\n\n        /* c8 ignore next 2 */\n        const errorMessage = await res.json()\n        throw new Error(`${res.status} ${res.statusText} ${errorMessage ? '- ' + errorMessage.message : ''}`)\n      }\n      const page = await res.json()\n      for (const upload of page) {\n        if (++count > maxResults) {\n          return\n        }\n        yield upload\n      }\n    }\n  }\n\n  // Just a sugar so you don't have to pass around endpoint and token around.\n\n  /**\n   * Uploads files to web3.storage. Files are hashed in the client and uploaded as a single\n   * [Content Addressed Archive(CAR)](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md).\n   * Takes a [Blob](https://developer.mozilla.org/en-US/docs/Web/API/Blob/Blob)\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * const file = new File(['hello world'], 'hello.txt', { type: 'text/plain' })\n   * const cid = await client.put([file])\n   * ```\n   * @param {Iterable<Filelike>} files\n   * @param {PutOptions} [options]\n   */\n  put (files, options) {\n    return Web3Storage.put(this, files, options)\n  }\n\n  /**\n   * Uploads a CAR ([Content Addressed Archive](https://github.com/ipld/specs/blob/master/block-layer/content-addressable-archives.md)) file to web3.storage.\n   * Takes a CarReader interface from @ipld/car\n   *\n   * Returns the corresponding Content Identifier (CID).\n   *\n   * @example\n   * ```js\n   * import fs from 'fs'\n   * import { Readable } from 'stream'\n   * import { CarReader, CarWriter } from '@ipld/car'\n   * import * as raw from 'multiformats/codecs/raw'\n   * import { CID } from 'multiformats/cid'\n   * import { sha256 } from 'multiformats/hashes/sha2'\n   *\n   * async function getCar() {\n   *    const bytes = new TextEncoder().encode('random meaningless bytes')\n   *    const hash = await sha256.digest(raw.encode(bytes))\n   *    const cid = CID.create(1, raw.code, hash)\n   *\n   *    // create the writer and set the header with a single root\n   *    const { writer, out } = await CarWriter.create([cid])\n   *    Readable.from(out).pipe(fs.createWriteStream('example.car'))\n\n   *    // store a new block, creates a new file entry in the CAR archive\n   *    await writer.put({ cid, bytes })\n   *    await writer.close()\n\n   *    const inStream = fs.createReadStream('example.car')\n   *    // read and parse the entire stream in one go, this will cache the contents of\n   *    // the car in memory so is not suitable for large files.\n   *    const reader = await CarReader.fromIterable(inStream)\n   *    return reader\n   * }\n   *\n   * const car = await getCar()\n   * const cid = await client.putCar(car)\n   * ```\n   * @param {import('@ipld/car/api').CarReader} car\n   * @param {PutCarOptions} [options]\n   */\n  putCar (car, options) {\n    return Web3Storage.putCar(this, car, options)\n  }\n\n  /**\n   * Fetch the Content Addressed Archive by its root CID.\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   */\n  get (cid, options) {\n    return Web3Storage.get(this, cid, options)\n  }\n\n  /**\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   */\n  /* c8 ignore next 3 */\n  delete (cid, options) {\n    return Web3Storage.delete(this, cid, options)\n  }\n\n  /**\n   * Fetch info on Filecoin deals and IPFS pins that a given CID is replicated in.\n   * @param {CIDString} cid\n   * @param {RequestOptions} [options]\n   */\n  status (cid, options) {\n    return Web3Storage.status(this, cid, options)\n  }\n\n  /**\n   * Find all uploads for this account. Use a `for await...of` loop to fetch them all.\n   * @example\n   * Fetch all the uploads\n   * ```js\n   * const uploads = []\n   * for await (const item of client.list()) {\n   *    uploads.push(item)\n   * }\n   * ```\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of\n   * @param {ListOptions} [opts]\n   * @returns {AsyncIterable<Upload>}\n   */\n  list (opts) {\n    return Web3Storage.list(this, opts)\n  }\n}\n\n/**\n * Map a UnixFSEntry to a File with a cid property.\n *\n * @param {UnixFSEntry} entry\n * @returns {Promise<Web3File>}\n */\nasync function toWeb3File ({ content, path, cid }) {\n  const chunks = []\n  for await (const chunk of content()) {\n    chunks.push(chunk)\n  }\n  const file = new File(chunks, toFilenameWithPath(path))\n  return Object.assign(file, { cid: cid.toString() })\n}\n\n/**\n * Trim the root cid from the path if there is anyting after it.\n * bafy...ic2q/path/to/pinpie.jpg => path/to/pinpie.jpg\n *         bafy...ic2q/pinpie.jpg => pinpie.jpg\n *                    bafk...52zy => bafk...52zy\n * @param {string} unixFsPath\n * @returns {string}\n */\nfunction toFilenameWithPath (unixFsPath) {\n  const slashIndex = unixFsPath.indexOf('/')\n  return slashIndex === -1 ? unixFsPath : unixFsPath.substring(slashIndex + 1)\n}\n\n/**\n * Add car unpacking smarts to the response object,\n * @param {Response} res\n * @returns {Web3Response}\n */\nfunction toWeb3Response (res) {\n  const response = Object.assign(res, {\n    unixFsIterator: async function * () {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .unixFsIterator`)\n      }\n      /* c8 ignore next 3 */\n      if (!res.body) {\n        throw new Error('No body on response')\n      }\n      const blockstore = new Blockstore()\n      try {\n        for await (const entry of unpackStream(res.body, { blockstore })) {\n          yield entry\n        }\n      } finally {\n        await blockstore.close()\n      }\n    },\n    files: async () => {\n      if (!res.ok) {\n        throw new Error(`Response was not ok: ${res.status} ${res.statusText} - Check for { \"ok\": false } on the Response object before calling .files`)\n      }\n      const files = []\n      // @ts-ignore we're using the enriched response here\n      for await (const entry of response.unixFsIterator()) {\n        if (entry.type === 'directory') {\n          continue\n        }\n        const file = await toWeb3File(entry)\n        files.push(file)\n      }\n      return files\n    }\n  })\n  return response\n}\n\n/**\n * Convert the passed file to an \"import candidate\" - an object suitable for\n * passing to the ipfs-unixfs-importer. Note: content is an accessor so that\n * the stream is only created when needed.\n *\n * @param {Filelike} file\n */\nfunction toImportCandidate (file) {\n  /** @type {ReadableStream} */\n  let stream\n  return {\n    path: file.name,\n    get content () {\n      stream = stream || file.stream()\n      return stream\n    }\n  }\n}\n\n/**\n * Follow Link headers on a Response, to fetch all the things.\n *\n * @param {(service: Service, opts: any) => Promise<Response>} fn\n * @param {Service} service\n * @param {{}} opts\n */\nasync function * paginator (fn, service, opts) {\n  let res = await fn(service, opts)\n  yield res\n  let link = parseLinkHeader(res.headers.get('Link') || '')\n  // @ts-ignore\n  while (link && link.next) {\n    // @ts-ignore\n    res = await fn(service, link.next)\n    yield res\n    link = parseLinkHeader(res.headers.get('Link') || '')\n  }\n}\n\nexport { Web3Storage, File, Blob, filesFromPath, getFilesFromPath }\n\n/**\n * Just to verify API compatibility.\n * TODO: convert lib to a regular class that can be type checked.\n * @type {API}\n */\nconst api = Web3Storage\nvoid api // eslint-disable-line no-void\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.enc.Utf8;\n\n}));","class SimpleCache {\n  constructor() {\n    this.storage = {};\n  }\n\n  async cached_get(key, fn) {\n    if (key in this.storage) {\n      return this.storage[key];\n    } else {\n      const value = await fn();\n      this.set(key, value);\n      return value;\n    }\n  }\n\n  get(key) {\n    return this.storage[key];\n  }\n\n  set(key, value) {\n    this.storage[key] = value;\n  }\n}\n\nexport { SimpleCache };\n","import { Web3Storage, File } from \"web3.storage\";\nimport AES from \"crypto-js/aes.js\";\nimport Utf8 from \"crypto-js/enc-utf8.js\";\n\nimport { SimpleCache } from \"./cache.js\";\n\nclass CommentStorage {\n  constructor(appId, token, key) {\n    this.appId = appId;\n    this.client = new Web3Storage({ token: token });\n    this.key = key;\n    this.isEncrypted = !!key;\n\n    this.cache = new SimpleCache();\n  }\n\n  getDefaultRouter() {\n    return {\n      appId: this.appId,\n      router: {},\n      lastUpdated: Date.now(),\n    };\n  }\n\n  async getNameCount(name) {\n    let count = 0;\n    for await (const upload of this.client.list()) {\n      if (upload.name.startsWith(`${this.appId}/${name}`)) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  async getCidBetweenTimestamp(name, from, to) {\n    const cids = [];\n    for await (const upload of this.client.list()) {\n      if (upload.name.startsWith(`${this.appId}/${name}`)) {\n        const timestamp = Number(new Date(upload.created).getTime());\n        if (from < timestamp && timestamp < to) {\n          cids.push(upload.cid);\n        }\n      }\n    }\n\n    return cids;\n  }\n\n  async getLatestAppRouter() {\n    let routerExisted = false;\n    let latestTimestamp = 0;\n    let latestCid;\n    for await (const upload of this.client.list()) {\n      if (upload.name.startsWith(`${this.appId}/router`)) {\n        routerExisted = true;\n        const timestamp = Number(upload.name.split(\"/\").slice(-1)[0]);\n        if (timestamp > latestTimestamp) {\n          latestTimestamp = timestamp;\n          latestCid = upload.cid;\n        }\n      }\n    }\n\n    if (routerExisted) {\n      this.cache.set(\"router\", await this.pull(latestCid));\n    } else {\n      this.cache.set(\"router\", this.getDefaultRouter());\n      await this.push(\"router\", this.cache.get(\"router\"), Date.now());\n    }\n\n    return this.cache.get(\"router\");\n  }\n\n  async push(name, data, timestamp) {\n    const appIdAppendedName = `${this.appId}/${name}/${timestamp}`;\n    const finalizedFileContent = this.isEncrypted\n      ? AES.encrypt(JSON.stringify(data), this.key).toString()\n      : JSON.stringify(data);\n    const file = new File([finalizedFileContent], appIdAppendedName, {\n      type: \"text/plain\",\n    });\n    return await this.client.put([file], {\n      name: appIdAppendedName,\n      wrapWithDirectory: false,\n    });\n  }\n\n  async pull(cid) {\n    const res = await this.client.get(cid);\n    const file = (await res.files())[0];\n    const fileContent = Buffer.from(await file.arrayBuffer()).toString();\n    if (this.isEncrypted) {\n      const decrypted = AES.decrypt(fileContent, this.key).toString(Utf8);\n      return JSON.parse(decrypted);\n    }\n    return JSON.parse(fileContent);\n  }\n}\n\nexport { CommentStorage };\n","import { CommentStorage } from \"./storage.js\";\nimport * as crypto from \"crypto\";\n\nlet initialized = false;\n\nclass IPFSComments {\n  constructor() {\n    //static initialization\n  }\n\n  async initialize(appId, token, key) {\n    this.appId = appId;\n    this.commentStorage = new CommentStorage(appId, token, key);\n    await this.commentStorage.getLatestAppRouter();\n  }\n\n  static async create(appId, token, key = \"\") {\n    if (initialized) {\n      throw new Error(\"IPFSComments is already initialized\");\n    }\n    initialized = true;\n    const ipfsComments = new IPFSComments();\n    await ipfsComments.initialize(appId, token, key);\n    return ipfsComments;\n  }\n\n  tryInsertComment(comment, parentId, allComments) {\n    for (const _comment of allComments) {\n      if (_comment.commentId === parentId) {\n        _comment.replies.push(comment);\n        return true;\n      } else {\n        if (this.tryInsertComment(comment, parentId, _comment.replies)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  mergeComments(baseComments, newComments) {\n    const commentIdMap = {};\n    for (const comment of baseComments) {\n      commentIdMap[comment.commentId] = comment;\n    }\n\n    for (const comment of newComments) {\n      if (comment.commentId in commentIdMap) {\n        const baseHistoryMap = {};\n        for (const baseHistory in commentIdMap[comment.commentId].history) {\n          baseHistoryMap[baseHistory.timestamp] = baseHistory;\n        }\n\n        for (const newHistory of comment.history) {\n          if (newHistory.timestamp in baseHistoryMap) {\n            baseHistoryMap[newHistory.timestamp] = newHistory;\n          }\n        }\n\n        commentIdMap[comment.commentId].history = Object.values(baseHistoryMap);\n        commentIdMap[comment.commentId].comment = comment.comment;\n        commentIdMap[comment.commentId].timestamp = comment.timestamp;\n        commentIdMap[comment.commentId].replies = this.mergeComments(\n          commentIdMap[comment.commentId].replies,\n          comment.replies\n        );\n      } else {\n        commentIdMap[comment.commentId] = comment;\n      }\n    }\n\n    return Object.values(commentIdMap);\n  }\n\n  mergeRouters(baseRouter, newRouter) {\n    for (const newPage of Object.keys(newRouter.router)) {\n      if (newPage in baseRouter.router) {\n        baseRouter.router[newPage] = newRouter.router[newPage];\n      }\n    }\n    return baseRouter;\n  }\n\n  async getLatestStates(pageId, currentTimestamp) {\n    let comments = await this.getComments(pageId);\n    let router = this.commentStorage.cache.get(\"router\");\n\n    const pageCount = await this.commentStorage.getNameCount(pageId);\n    const currentEpoch =\n      pageId in router.router ? router.router[pageId].epoch : -1;\n    if (pageCount !== currentEpoch + 1) {\n      const lastTimestamp =\n        this.commentStorage.cache.get(\"router\").router[pageId].timestamp || 0;\n\n      const rcids = await this.commentStorage.getCidBetweenTimestamp(\n        \"router\",\n        lastTimestamp,\n        currentTimestamp\n      );\n      for (const cid of rcids) {\n        const mergeRouter = await this.commentStorage.pull(cid);\n        router = this.mergeRouters(router, mergeRouter);\n      }\n\n      // merge all comments between last epoch and current epoch\n      const pcids = await this.commentStorage.getCidBetweenTimestamp(\n        pageId,\n        lastTimestamp,\n        currentTimestamp\n      );\n      for (const cid of pcids) {\n        const mergeComments = await this.commentStorage.pull(cid);\n        comments = this.mergeComments(comments, mergeComments);\n      }\n    }\n\n    return {\n      router: router,\n      comments: comments,\n      epoch: pageCount,\n    };\n  }\n\n  async addComment(pageId, comment, replyTo = undefined) {\n    const currentTimestamp = Date.now();\n    let resp = await this.getLatestStates(pageId, currentTimestamp);\n    let comments = resp.comments;\n    let router = resp.router;\n\n    const commentId = crypto\n      .createHash(\"sha256\")\n      .update(`${comment}/${Date.now()}`)\n      .digest(\"hex\");\n    const formattedComment = {\n      commentId: commentId,\n      replies: [],\n      comment: comment,\n      history: [],\n      timestamp: currentTimestamp,\n    };\n    const isInserted = this.tryInsertComment(\n      formattedComment,\n      replyTo,\n      comments\n    );\n    if (!isInserted) {\n      comments.push(formattedComment);\n    }\n\n    router.router[pageId] = {\n      cid: await this.commentStorage.push(pageId, comments, currentTimestamp),\n      timestamp: currentTimestamp,\n      epoch: resp.epoch,\n    };\n    router.lastUpdated = currentTimestamp;\n    this.commentStorage.cache.set(router.router[pageId].cid, comments);\n    this.commentStorage.cache.set(\"router\", router);\n    await this.commentStorage.push(\"router\", router, currentTimestamp);\n\n    return commentId;\n  }\n\n  tryEditComment(newComment, commentId, allComments, currentTimestamp) {\n    for (const _comment of allComments) {\n      if (_comment.commentId === commentId) {\n        _comment.history.push({\n          comment: _comment.comment,\n          timestamp: _comment.timestamp,\n        });\n        _comment.comment = newComment;\n        _comment.timestamp = currentTimestamp;\n        return true;\n      } else {\n        if (\n          this.tryEditComment(\n            newComment,\n            commentId,\n            _comment.replies,\n            currentTimestamp\n          )\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  async editComment(pageId, newComment, commentId) {\n    const currentTimestamp = Date.now();\n    let resp = await this.getLatestStates(pageId, currentTimestamp);\n    let comments = resp.comments;\n    let router = resp.router;\n\n    const isEdited = this.tryEditComment(\n      newComment,\n      commentId,\n      comments,\n      currentTimestamp\n    );\n    if (!isEdited) {\n      throw new Error(\"Comment not found\");\n    }\n\n    router.router[pageId] = {\n      cid: await this.commentStorage.push(pageId, comments, currentTimestamp),\n      timestamp: currentTimestamp,\n      epoch: resp.epoch,\n    };\n    router.lastUpdated = currentTimestamp;\n    this.commentStorage.cache.set(router.router[pageId].cid, comments);\n    this.commentStorage.cache.set(\"router\", router);\n    await this.commentStorage.push(\"router\", router, currentTimestamp);\n\n    return commentId;\n  }\n\n  async removeComment(pageId, commentId) {\n    return await this.editComment(pageId, \"[deleted]\", commentId);\n  }\n\n  async getComments(pageId) {\n    const routingTable = this.commentStorage.cache.get(\"router\").router;\n    if (pageId in routingTable) {\n      const cid = routingTable[pageId].cid;\n      return this.commentStorage.cache.cached_get(cid, async () => {\n        return await this.commentStorage.pull(cid);\n      });\n    } else {\n      return [];\n    }\n  }\n}\n\nexport { IPFSComments };\n"],"names":["getIterator","iterable","next","Symbol","iterator","asyncIterator","TypeError","defer","reject","resolve","promise","Promise","resolveFunc","rejectFunc","_transform","concurrency","func","resultQueue","readQueue","ended","reading","inflightCount","lastError","fulfillReadQueue","length","shift","done","value","undefined","async","fillQueue","itrValue","push","error","mapAndQueue","asyncIterableIterator","deferred","transform","curriedFunc","curriedIterable","RetryOperation","timeouts","options","forever","this","_originalTimeouts","JSON","parse","stringify","_timeouts","_options","_maxRetryTime","maxRetryTime","Infinity","_fn","_errors","_attempts","_operationTimeout","_operationTimeoutCb","_timeout","_operationStart","_timer","_cachedTimeouts","slice","retry_operation","prototype","reset","stop","clearTimeout","retry","err","currentTime","Date","getTime","unshift","Error","timeout","splice","self","setTimeout","unref","attempt","fn","timeoutOps","cb","try","console","log","start","errors","attempts","mainError","counts","mainErrorCount","i","message","count","require$$0","exports","operation","retries","Array","concat","opts","factor","minTimeout","maxTimeout","randomize","key","createTimeout","sort","a","b","random","Math","round","max","pow","min","wrap","obj","methods","method","original","op","args","call","arguments","callback","pop","apply","bind","networkErrorMsgs","AbortError","constructor","super","originalError","stack","name","decorateErrorWithCounts","attemptNumber","retriesLeft","isNetworkError","errorMessage","includes","pRetry","input","onFailedAttempt","pRetryModule","pRetry_1","default","AbortError_1","last","source","res","entry","itLast","rawPipe","fns","isIterable","isDuplex","sink","duplexPipelineFn","duplex","pipe","itPipeModule","itPipe","encode_1","encode","MSB","REST","MSBALL","INT","num","out","offset","Number","MAX_SAFE_INTEGER","bytes","RangeError","oldOffset","decode","read","buf","counter","l","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","require$$1","encodingLength","require$$2","MSB$1","REST$1","_brrp_varint","data","encodeTo","int","target","empty","Uint8Array","fromHex","hex","hexes","match","map","parseInt","equals","aa","bb","byteLength","ii","coerce","o","ArrayBuffer","isView","buffer","byteOffset","fromString","str","TextEncoder","toString","TextDecoder","create","code","digest","size","sizeOffset","varint.encodingLength","digestOffset","varint.encodeTo","set","Digest","multihash","varint.decode","subarray","equalBytes","base","ALPHABET","BASE_MAP","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","isArray","from","pbegin","pend","b58","it1","it2","repeat","string","src","_brrp__multiformats_scope_baseX","Encoder","prefix","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","text","or","decoder","ComposedDecoder","decoders","Object","keys","left","right","Codec","encoder","baseX","alphabet","basex","bitsPerChar","codes","end","bits","written","SyntaxError","pad","mask","rfc4648","base58btc","base58flickr","base32","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","CID","version","asCID","_baseCache","Map","defineProperties","hidden","readonly","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","toV1","Digest.create","createV1","other","Digest.equals","toStringV0","toStringV1","toJSON","hash","toStringTag","for","static","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","codec","multibaseName","encodeCID","Digest.decode","cid","remainder","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","Digest.Digest","multihashCode","initialBytes","parseCIDtoBytes","cache","get","codeOffset","hashOffset","writable","configurable","enumerable","range","test","warn","typeofs","objectTypeNames","is","typeOf","isBuffer","objectType","getObjectType","objectTypeName","Type","major","terminal","majorEncoded","compare","typ","uint","negint","array","tag","float","false","true","null","break","Token","type","encodedLength","encodedBytes","byteValue","useBuffer","globalThis","process","browser","Buffer","textDecoder","textEncoder","asU8A","utf8Slice","utf8ToBytes","fromArray","arr","chunks","c","off","alloc","allocUnsafe","b1","b2","units","codePoint","leadSurrogate","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","MAX_ARGUMENTS_LENGTH","codePoints","len","String","fromCharCode","defaultChunkSize","Bl","chunkSize","cursor","maxCursor","_initReuseChunk","topChunk","chunkPos","toBytes","byts","chunk","decodeErrPrefix","encodeErrPrefix","assertEnoughData","pos","need","uintBoundaries","BigInt","readUint8","strict","readUint16","readUint32","readUint64","hi","lo","allowBigInt","decodeUint8","_minor","decodeUint16","decodeUint32","decodeUint64","encodeUint","token","encodeUintValue","nuint","buint","decodeNegint8","uint.readUint8","decodeNegint16","uint.readUint16","decodeNegint32","uint.readUint32","encodedSize","compareTokens","tok1","tok2","neg1b","pos1b","decodeNegint64","uint.readUint64","MIN_SAFE_INTEGER","encodeNegint","unsigned","uint.encodeUintValue","toToken","decodeBytesCompact","minor","decodeBytes8","decodeBytes16","decodeBytes32","decodeBytes64","tokenBytes","encodeBytes","compareBytes","totLength","tok","retainStringBytes","decodeStringCompact","decodeString8","decodeString16","decodeString32","decodeString64","uint.uintBoundaries","encodeString","_data","_pos","decodeArrayCompact","decodeArray8","decodeArray16","decodeArray32","decodeArray64","decodeArrayIndefinite","allowIndefinite","encodeArray","decodeMapCompact","decodeMap8","decodeMap16","decodeMap32","decodeMap64","decodeMapIndefinite","encodeMap","decodeTagCompact","decodeTag8","decodeTag16","decodeTag32","decodeTag64","encodeTag","uint.encodeUint","MINOR_FALSE","MINOR_TRUE","MINOR_NULL","MINOR_UNDEFINED","decodeUndefined","allowUndefined","coerceUndefinedToNull","decodeBreak","createToken","allowNaN","isNaN","allowInfinity","decodeFloat16","readFloat16","decodeFloat32","readFloat32","decodeFloat64","readFloat64","encodeFloat","decoded","success","float64","encodeFloat16","ui8a","encodeFloat32","encodeFloat64","dataView","DataView","inp","setUint16","setFloat32","valu32","getUint32","exponent","mantissa","logicalExponent","half","NaN","exp","mant","val","getFloat32","setFloat64","getFloat64","invalidMinor","errorer","msg","jump","uint.decodeUint8","uint.decodeUint16","uint.decodeUint32","uint.decodeUint64","negint.decodeNegint8","negint.decodeNegint16","negint.decodeNegint32","negint.decodeNegint64","bytes.decodeBytesCompact","bytes.decodeBytes8","bytes.decodeBytes16","bytes.decodeBytes32","bytes.decodeBytes64","string.decodeStringCompact","string.decodeString8","string.decodeString16","string.decodeString32","string.decodeString64","array.decodeArrayCompact","array.decodeArray8","array.decodeArray16","array.decodeArray32","array.decodeArray64","array.decodeArrayIndefinite","map.decodeMapCompact","map.decodeMap8","map.decodeMap16","map.decodeMap32","map.decodeMap64","map.decodeMapIndefinite","tag.decodeTagCompact","tag.decodeTag8","tag.decodeTag16","tag.decodeTag32","tag.decodeTag64","float.decodeUndefined","float.decodeFloat16","float.decodeFloat32","float.decodeFloat64","float.decodeBreak","quick","quickEncodeToken","defaultEncodeOptions","mapSorter","makeCborEncoders","encoders","cborEncoders","Ref","parent","p","simpleTokens","emptyArray","emptyMap","typeEncoders","number","_typ","_refStack","isInteger","isSafeInteger","bigint","boolean","_obj","refStack","addBreakTokens","createCheck","entries","e","objectToTokens","isMap","sortMapEntries","split","customTypeEncoder","tokens","typeEncoder","e1","e2","keyToken1","keyToken2","tcmp","tokensToEncoded","encodeCustom","quickBytes","assign","defaultDecodeOptions","Tokeniser","byt","padStart","DONE","BREAK","tokenToArray","tokeniser","tokensToObject","tokenToMap","useMaps","m","tags","tagged","tokenizer","CID_CBOR_TAG","cidEncoder","cborg.Token","cborg.Type","undefinedEncoder","numberEncoder","encodeOptions","cidDecoder","decodeOptions","node","cborg.encode","cborg.decode","CIDV0_BYTES","SHA2_256","LENGTH","DAG_PB","readVarint","reader","upTo","seek","readHeader","header","exactly","block","decodeDagCbor","roots","filter","readMultihash","codeLength","mhLength","readCid","first","readBlockHead","blockLength","readBlock","readBlockIndex","index","blockOffset","createDecoder","headerPromise","bytesReader","chunkReader","readChunk","have","currentChunk","bufa","reduce","asyncIterableReader","asyncIterable","CarReader","blocks","_version","_roots","_blocks","_keys","indexOf","decodeReaderComplete","CarIteratorBase","_iterable","_decoded","CarBlockIterator","fromBytes","fromIterable","decodeIterator","createHeader","headerBytes","dagCborEncode","varintBytes","createEncoder","writer","write","noop","chunkQueue","drainer","drainerResolver","outWait","outWaitResolver","makeDrainer","CarWriter","_encoder","_mutex","setRoots","_ended","then","writeBlock","close","toRoots","encodeWriter","CarWriterOut","newHeader","_iterator","_iterating","iw","iteratorChannel","root","_root","batch","things","thing","itBatch","parallelBatch","tasks","ok","result","itParallelBatch","isPlainObj","getPrototypeOf","isOptionObject","hasOwnProperty","propertyIsEnumerable","defineProperty","object","defaultMergeOptions","concatArrays","ignoreUndefined","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","symbol","clone","cloneArray","cloneOptionObject","forEach","mergeKeys","merged","config","merge","resultIndex","indices","k","mergeOptions","_","option","Hasher","sha","crypto","subtle","sha256","sha512","library","x86","x64","inputValidation","_validBytes","_x86Multiply","n","_x86Rotl","_x86Fmix","h","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","hash32","seed","h1","k1","c1","c2","hash128","h2","h3","h4","k2","k3","k4","c3","c4","module","murmurHash3","fromNumberTo32BitBuf","mur","murmur3128","bytes.fromHex","hamtHashFn","reverse","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","hasher","leafType","cidVersion","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","window","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hamtHashCode","hamtBucketBits","defaultOptions$1","defaults","props","createError","ErrClass","errCode","aspromise","ctx","params","pending","base64","ceil","b64","s64","t","parts","join","invalidEncoding","EventEmitter","_listeners","eventemitter","on","evt","listeners","emit","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","floor","LN2","readFloat_ieee754","readUint","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","inquire","moduleName","mod","eval","replace","inquire_1","utf8","pool_1","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","low","high","toLong","Boolean","fromHash","toHash","part0","part1","part2","dst","ifNotSet","newError","CustomError","properties","captureStackTrace","asPromise","require$$3","require$$4","require$$5","pool","require$$6","require$$7","isNode","global","versions","freeze","emptyObject","isFinite","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","_configure","encoding","Writer","BufferWriter","Op","State","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","copy","Reader","BufferReader","indexOutOfRange","writeLength","create_array","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","service","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","request","response","endedByRPC","protobuf","configure","build","rpc","$Reader","$protobuf","$Writer","$util","$root","Data","blocksizes","ks","filesize","hashType","fanout","mode","mtime","w","UnixTime","r","instance","fromObject","d","fromValue","toObject","arrays","DataType","valuesById","values","Seconds","FractionalNanoseconds","Metadata","MimeType","PBData","Pb.Data","types","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","parseMode","parseMtime","secs","nsecs","ms","errcode","UnixFS","marshaled","objects","blockSizes","_originalMode","_mode","isDirectory","parsedMode","addBlockSize","removeBlockSize","fileSize","sum","marshal","Raw","Directory","File","Symlink","HAMTShard","parsed","pbData","decodeVarint","v","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","link","fieldNum","Hash","Name","Tsize","decodeNode","links","linksBeforeData","Links","maxInt32","maxUInt32","encodeLink","encodeVarint","nameBytes","encodeNode","sizeNode","sizeLink","sov","len64","len8tab","pbNodeProperties","pbLinkProperties","linkComparator","abuf","bbuf","y","hasOnlyProperties","some","asLink","pbl","prepare","pbn","validate","createNode","createLink","persist","blockstore","dagPb","put","signal","dirBuilder","item","unixfs","path","all","itAll","flat","balanced","reduceToParents","chunked","trickleStream","Root","iteration","maxDepth","subTree","layer","isFull","addChild","SubTree","append","currentDepth","children","depth","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","child","bufferImporter","file","content","raw","dagPb.encode","dagBuilders","dagFlat","dagBalanced","trickle","dagTrickle","buildFileBatch","previous","bufferImporterFn","single","leaves","leaf","f","rawCodec.code","acc","curr","fileBuilder","dagBuilder","base64Js","toByteArray","fromByteArray","lookup","revLookup","Arr","getLens","validLen","lens","placeHoldersLen","_byteLength","tmp","curByte","tripletToBase64","encodeChunk","uint8","output","extraBytes","maxChunkLength","len2","ieee754","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","rt","abs","customInspectSymbol","SlowBuffer","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","setPrototypeOf","arg","encodingOrOffset","isEncoding","actual","arrayView","isInstance","fromArrayBuffer","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","checked","numberIsNaN","toPrimitive","assertSize","mustMatch","loweredCase","base64ToBytes","slowToString","hexSlice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","substr","blitBuffer","asciiWrite","byteArray","asciiToBytes","base64Write","ucs2Write","utf16leToBytes","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","poolSize","fill","allocUnsafeSlow","_isBuffer","list","swap16","swap32","swap64","toLocaleString","inspect","trim","thisStart","thisEnd","thisCopy","targetCopy","_arr","ret","hexSliceLookupTable","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","readUIntLE","mul","readUIntBE","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","writeUIntLE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","targetStart","copyWithin","E","sym","getMessage","Base","addNumericalSeparator","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","received","INVALID_BASE64_RE","base64clean","table","i16","BufferBigIntNotDefined","BufferList","_init","_bufs","_new","_offset","tot","_t","_reverseOffset","blOffset","bufferId","dstStart","srcStart","srcEnd","bufoff","shallowSlice","startOffset","endOffset","buffers","consume","trunc","duplicate","_appendBuffer","_isBufferList","search","blIndex","buffOffset","buff","nativeSearchResult","revOffset","_match","searchOffset","isBufferList","BufferList_1","Rabin","asModule","windowSize","rabin","fingerprint","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengthsPtr","Int32Array","pointer","processed","ID_OFFSET","SIZE_OFFSET","ARRAYBUFFER_ID","STRING_ID","ARRAYBUFFERVIEW","ARRAY","VAL_ALIGN_OFFSET","VAL_SIGNED","VAL_FLOAT","VAL_MANAGED","ARRAYBUFFERVIEW_BUFFER_OFFSET","ARRAYBUFFERVIEW_DATASTART_OFFSET","ARRAYBUFFERVIEW_DATALENGTH_OFFSET","ARRAYBUFFERVIEW_SIZE","ARRAY_LENGTH_OFFSET","ARRAY_SIZE","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","ptr","U32","Uint32Array","U16","Uint16Array","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","line","colm","trace","postInstantiate","rawExports","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","Int8Array","Int16Array","BigInt64Array","__getArrayView","align","getTypedArray","getTypedArrayView","bufPtr","__allocString","__getString","view","__getArray","__getArrayBuffer","__getInt8Array","__getInt8ArrayView","__getUint8Array","__getUint8ArrayView","__getUint8ClampedArray","Uint8ClampedArray","__getUint8ClampedArrayView","__getInt16Array","__getInt16ArrayView","__getUint16Array","__getUint16ArrayView","__getInt32ArrayView","__getUint32Array","__getUint32ArrayView","__getInt64Array","__getInt64ArrayView","__getUint64Array","__getUint64ArrayView","__getFloat32Array","__getFloat32ArrayView","__getFloat64Array","__getFloat64ArrayView","__instanceof","baseId","demangle","isResponse","Response","instantiate","instantiateStreaming","WebAssembly","Module","compile","instantiateSync","Instance","arrayBuffer","setArgumentsLength","internalName","elem","part","className","classElem","ctor","thisValue","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","loader","loadWebAssembly","imp","supported","wasm","Blob","rabinWasm","getRabin","avg","compiled","rabinChunker","sizepow","log2","sizes","fixedSizeChunker","bl","currentLength","emitted","newBl","identity","base2","base8","base10","base16","base16upper","base36","base36upper","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","char","base256emoji","bases","identityBase","base58","createCodec","ascii","BASES","latin1","binary","validateChunks","uint8ArrayFromString","isAsyncIterable","contentAsAsyncIterable","chunkValidator","fixedSize","Dir","dirty","parentKey","DirFlat","_children","childCount","directChildrenCount","onlyChild","flush","BITS_PER_BYTE","sparseArray","_bitArrays","_length","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","unset","_sortData","mapped","reducer","initialValue","find","finder","noCreate","bytePos","_bytePosFor","byte","bitPos","popCountReduce","popCount","targetLength","randomIndex","sortInternal","bitField","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","compactArray","valueOnly","_v","SparseArray","Bucket","posAtParent","_popCount","_parent","_posAtParent","place","_findNewBucketAndPos","bucket","_putAt","_findChild","_findPlace","_at","_delAt","leafCount","childrenCount","eachLeafSeries","serialize","asyncTransform","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","tableSize","hashValue","take","existingChild","_putObjectAt","newPlace","_level","exists","untake","nodes","mappedChildren","START_MASKS","STOP_MASKS","consumableBuffer","_value","_currentBytePos","_currentBitPos","availableBits","totalBits","pendingBits","_haveBits","taking","byteBitsToInt","maskFor","ConsumableBuffer","uint8ArrayConcat","wrapHash","hashFn","InfiniteHash","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","_produceMoreBits","available","availableForUntake","consumableHashModule","consumableHash","createHAMT","bucketOptions","DirSharded","_bucket","shardRoot","childrenSize","labelPrefix","toUpperCase","shard","subShard","flushedDir","label","flatToShard","threshold","newDir","convertToShard","oldDir","eachChildSeries","toPathComponents","addToTree","tree","pathElems","lastIndex","currentPath","pathElem","flushAndYield","treeBuilder","unwrapped","importer","candidates","dagBuilderFn","treeBuilderFn","browserReadableStreamToIt","stream","getReader","preventCancel","cancel","releaseLock","browserReadablestreamToIt","blobToIt","blob","body","blobToIt_1","peekableIterator","queue","peek","itPeekable","itMap","isBytes","isBlob","isFileObject","isReadableStream","toAsyncIterable","normaliseContent","browserStreamToIt","peekable","normaliseCandidateSingle","toFileObject","normaliseInput","normaliseCandidateMultiple","_readableState","isSingle","getNormaliser","normaliseInputSingle","normaliseInputMultiple","notFoundError","abortedError","drain","itDrain","itFilter","items","itTake","sortAll","sorter","BaseBlockstore","open","has","delete","puts","dels","commit","putMany","deleteMany","q","query","it","_all","startsWith","filters","orders","queryKeys","_allKeys","MemoryBlockStore","store","cidStr","clear","unixfsImporterOptionsDefault","pack","userBlockstore","rootEntry","carOut","carOutIter","writingPromise","writeAll","MAX_HEADER_LENGTH","THROW_ON_MAX_HEADER_LENGTH_EXCEEDED","hasRel","rel","intoRels","createObjects","parseLink","linkUrl","qry","url","URL","searchParams","checkHeader","linkHeader","maxHeaderLength","throwOnMaxHeaderLengthExceeded","parseLinkHeader","addLinksToHamtBucket","rootBucket","toPrefix","position","toBucketPath","findShardCid","context","hamtDepth","lastBucket","bucketPath","entryPrefix","entryName","extractDataFromBlock","blockStart","requestedStart","requestedEnd","blockEnd","validateOffsetAndLength","emitBytes","streamPosition","unmarshal","childStart","childLink","childEnd","dagPb.code","dagPb.decode","raw.code","dagCbor.code","dagCbor.decode","fileContent","directoryContent","hamtShardedDirectoryContent","listDirectory","findLinkCid","contentExporters","contentFile","directory","contentDirectory","contentHamtShardedDirectory","metadata","symlink","unixFsResolver","toResolve","linkCid","nextName","rawContent","subObject","subPath","subObjectCid","mh.decode","resolvers","code$4","dagPbResolver","code$3","rawResolver","code$5","dagCborResolver","identifyResolver","resolver","cidAndRest","walkPath","entryPath","startingDepth","exporter","recurse","VerifyingGetOnlyBlockStore","isValid","cr","unpackStream","readable","carIterator","asAsyncIterable","verifyingBlockStore","fromBlockstore","getRoots","unixFsExporter","toIterable","element","elementPath","Block","asBlock","TreewalkCarSplitter","targetSize","_reader","_targetSize","_decoders","pb","cbor","channel","_cars","rawBlock","parents","_get","newCar","ch","throttledQueue","maxRequestsPerInterval","interval","evenlySpaced","lastIntervalStart","numRequestsPerInterval","dequeue","intervalEnd","now","_i","_a","catch","fetch","Blockstore","MAX_PUT_RETRIES","MAX_CONCURRENT_UPLOADS","DEFAULT_CHUNK_SIZE","MAX_BLOCK_SIZE","MAX_CHUNK_SIZE","RATE_LIMIT_REQUESTS","RATE_LIMIT_PERIOD","createRateLimiter","throttle","globalRateLimiter","Web3Storage","endpoint","rateLimiter","_fetch","Authorization","files","onRootCidReady","onStoredChunk","maxRetries","toImportCandidate","car","putCar","headers","encodeURIComponent","carRoot","splitter","upload","carParts","carFile","aborted","status","cars","toWeb3Response","statusText","before","toISOString","maxResults","paginator","URLSearchParams","page","toWeb3File","toFilenameWithPath","unixFsPath","slashIndex","unixFsIterator","CryptoJS","msCrypto","require","cryptoSecureRandomInt","getRandomValues","randomBytes","F","subtype","C","C_lib","lib","extend","overrides","mixIn","init","$super","propertyName","WordArray","words","sigBytes","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","_minBufferSize","nBytesReady","_doProcessBlock","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","_createHmacHelper","C_algo","HMAC","algo","parseLoop","base64Str","base64StrLength","reverseMap","bitsCombined","Base64","_map","base64Chars","triplet","paddingChar","_reverseMap","paddingIndex","T","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","HmacMD5","W","SHA1","HmacSHA1","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","EvpKDF","keySize","iterations","compute","password","salt","derivedKey","derivedKeyWords","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","dataUpdate","ivSize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","encrypt","decrypt","ciphertext","StreamCipher","C_mode","BlockCipherMode","iv","Encryptor","Decryptor","_cipher","_iv","CBC","xorBlock","_prevBlock","processBlock","encryptBlock","thisBlock","decryptBlock","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","modeCreator","__creator","finalProcessedBlocks","CipherParams","cipherParams","formatter","OpenSSLFormatter","format","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","OpenSSLKdf","kdf","execute","derivedParams","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AES","_nRounds","_keyPriorReset","keyWords","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","nRounds","s0","s1","s2","s3","t0","t1","t2","t3","SimpleCache","storage","CommentStorage","appId","client","isEncrypted","getDefaultRouter","router","lastUpdated","to","cids","timestamp","created","latestCid","routerExisted","latestTimestamp","pull","appIdAppendedName","finalizedFileContent","decrypted","initialized","IPFSComments","commentStorage","getLatestAppRouter","ipfsComments","initialize","tryInsertComment","comment","parentId","allComments","_comment","commentId","replies","mergeComments","baseComments","newComments","commentIdMap","baseHistoryMap","baseHistory","history","newHistory","mergeRouters","baseRouter","newRouter","newPage","pageId","currentTimestamp","comments","getComments","pageCount","getNameCount","epoch","lastTimestamp","rcids","getCidBetweenTimestamp","mergeRouter","pcids","replyTo","resp","getLatestStates","createHash","formattedComment","tryEditComment","newComment","editComment","routingTable","cached_get"],"mappings":"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"}